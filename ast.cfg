# Got an idea from https://github.com/eliben/pycparser/blob/master/pycparser/_c_ast.cfg
Node:[apples,cherios]{}
FuncDecl:[apples,cherios]{}
FuncDef: [apples,cherios]{}
FuncCall: []{}
Return: []{}
Node: []
{}
FuncDecl: []
{
}

FuncDef: []
{
}

FuncCall: []
{
}

Return: [] {}
ParamList: [] {}

IterStatement: [] {}
Break: [] {}
Continue: [] {}

ArrDecl: [] {}
ArrRef: [] {}
PtrDecl: [] {}

Assignment: [] {}
BinOp: [] {}
TernaryOp: [] {}
UnaryOp: [] {}

Goto: [] {}

Cast: [] {}

Compound: [] {}

Constant: [] {}

Decl: [] {}
DeclList: [] {}

ExprList: [] {}
EmptyStatement: [] {}

If: [] {}
InitList: [] {}
Label: [] {}	

#-- typedef 
TypeDecl: [] {}
TypeName: [] {}
ID: [] {}
IdenType: [] {}

#--- Do Later
Struct: [] {}
Union: [] {}
StructRef: [] {}
Case: [] {}
Default: [] {}
Switch: [] {}

ParamList: [] {}

IterStatement: [] {}
Break: [] {}
Continue: [] {}

ArrDecl: [] {}
ArrRef: [] {}
PtrDecl: [] {}

Assignment: [] {}
BinOp: [] {}
TernaryOp: [] {}
UnaryOp: [] {}

Goto: [] {}

Cast: [] {}

Compound: [] {}

Constant: [] {}

Decl: [] {}
DeclList: [] {}

ExprList: [] {}
EmptyStatement: [] {}

If: [] {}
InitList: [] {}
Label: [] {}	

TypeDecl: [] {}
TypeName: [] {}
ID: [] {}
IdenType: [] {}

# Do Later
Struct: [] {}
Union: [] {}
StructRef: [] {}
Case: [] {}
Default: [] {}
Switch: [apples,tacs] {asdf
asdf}
