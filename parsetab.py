
# /Users/appleseed/Documents/school/cs660/compiler/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'DAEB46FDEEFBDDEB513D6DB81D0A520F'
    
_lr_action_items = {'RIGHT_OP':([82,83,97,99,100,103,105,106,107,108,134,137,174,180,188,198,200,207,269,274,275,276,277,280,281,283,284,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-29,-36,-5,195,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,195,195,195,195,-34,-35,-37,-38,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'DO':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,140,-186,-76,-174,-176,-172,140,-181,-173,140,-188,-177,140,-190,-175,-187,-185,-183,140,-202,-200,-182,-189,-191,140,140,-201,-199,-184,-203,-180,140,-178,140,-179,140,140,140,-195,-194,-192,-197,140,140,-198,-196,-193,]),'SHORT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[2,2,-94,-127,-101,-92,-93,-89,-88,-204,2,-91,-100,-96,-131,2,-87,-90,-130,-207,-97,-206,-95,-98,2,-99,-102,-128,2,-105,2,-129,-205,-122,2,-75,2,2,-212,-186,2,2,2,2,-108,2,-132,-137,2,-134,-76,-209,2,2,-181,2,-210,-211,-187,-185,2,-104,-109,-120,-135,2,-136,2,2,-133,-208,-183,-182,-103,-110,-121,2,2,-184,]),'CONST':([0,1,2,3,4,5,6,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,38,39,41,42,43,46,47,49,51,54,56,57,59,60,62,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[3,3,-94,-127,-101,-92,3,-93,-89,-88,-204,3,-91,-100,-96,-131,3,-87,-90,-130,-207,-97,-206,-95,-98,3,-99,-102,-128,3,3,-142,-105,3,-129,-205,-122,3,-75,3,3,-212,-186,3,-143,3,3,3,-108,3,-132,-137,3,-134,-76,-209,3,3,-181,3,-210,-211,-187,-185,3,-104,-109,-120,-135,3,-136,3,3,-133,-208,-183,-182,-103,-110,-121,3,3,-184,]),'OPENBRACK':([10,17,19,22,24,29,36,41,43,47,51,54,56,59,60,61,70,76,102,114,116,118,119,120,122,123,125,126,129,136,138,140,142,143,149,150,164,172,208,211,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,327,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[42,-107,-131,48,-130,-106,56,64,-129,71,-75,56,56,-186,56,56,-132,-137,-134,-76,211,56,-174,-176,-172,56,-181,-173,56,-188,-177,56,-190,-175,-187,-185,-135,-136,-133,211,-183,56,-202,-200,-182,-189,-191,56,56,-201,-199,-184,-203,-180,56,-178,211,56,-179,56,56,56,-195,-194,-192,-197,56,56,-198,-196,-193,]),'EQ_OP':([82,83,95,97,99,100,103,104,105,106,107,108,134,137,174,180,188,198,200,207,269,272,274,275,276,277,280,281,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-44,-29,-36,-5,-39,197,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,197,-42,-40,-43,-41,-34,-35,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'DEC_OP':([50,51,56,59,82,84,85,87,89,90,92,93,94,96,100,105,106,107,109,112,114,116,119,120,122,123,124,125,126,129,133,136,137,138,140,141,142,143,149,150,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,269,287,288,289,298,299,300,301,303,305,308,322,323,324,325,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[84,-75,84,-186,-2,84,84,84,-26,-21,-23,-22,-24,84,-5,-1,-3,198,84,-25,-76,84,-174,-176,-172,84,84,-181,-173,84,84,-188,-1,-177,84,84,-190,-175,-187,-185,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-12,-11,84,84,84,84,84,84,-183,84,-202,84,-200,-182,-189,84,-191,84,84,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,84,84,84,-201,84,84,84,84,-4,-9,-10,-7,-199,-184,-203,84,-180,84,-178,84,84,-8,-6,84,84,84,-179,84,84,84,84,-195,-194,-192,-197,84,84,-198,-196,-193,]),'OPENPARAN':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,18,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,37,38,39,40,41,43,44,46,47,50,51,55,56,57,58,59,62,63,66,68,69,70,76,79,82,84,85,87,89,90,92,93,94,96,100,102,105,106,107,109,112,113,114,115,116,117,119,120,122,123,124,125,126,127,129,132,133,135,136,137,138,140,141,142,143,145,147,148,149,150,152,154,155,158,162,163,164,165,168,169,170,172,175,177,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,208,211,214,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,249,251,256,258,260,261,265,266,268,269,287,288,289,298,299,300,301,303,305,308,309,313,314,315,317,319,322,323,324,325,327,328,329,330,331,332,333,334,335,340,342,343,345,346,347,349,350,351,352,],[18,-77,-94,-127,-101,-92,-138,-93,-89,-88,18,-204,-79,-91,-100,-96,18,-131,18,-87,-90,49,18,-207,-97,-206,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,49,-80,-205,-122,85,-75,-82,141,-212,18,-186,-143,-141,-112,-114,18,-132,-137,165,-2,175,141,181,-26,-21,-23,-22,-24,85,-5,-134,-1,-3,202,175,-25,18,-76,-209,141,18,-174,-176,-172,141,141,-181,-173,220,141,227,85,241,-188,-1,-177,141,141,-190,-175,245,-210,-211,-187,-185,-104,-111,-113,85,-120,85,-135,165,257,85,165,-136,141,266,85,141,85,85,85,85,85,85,85,141,85,85,85,85,85,85,85,-12,-11,141,141,85,85,85,-133,141,-208,-183,141,-202,141,-200,-182,-189,141,-191,141,141,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,141,141,141,-201,141,-103,85,18,-121,-163,85,-159,257,85,266,266,-4,-9,-10,-7,-199,-184,-203,141,-180,141,-178,332,-164,-158,-165,-161,-160,85,141,-8,-6,141,141,141,-179,141,141,141,-166,-162,141,-195,-194,-192,-197,141,141,-198,-196,-193,]),'VOID':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[5,5,-94,-127,-101,-92,-93,-89,-88,-204,5,-91,-100,-96,-131,5,-87,-90,-130,-207,-97,-206,-95,-98,5,-99,-102,-128,5,-105,5,-129,-205,-122,5,-75,5,5,-212,-186,5,5,5,5,-108,5,-132,-137,5,-134,-76,-209,5,5,-181,5,-210,-211,-187,-185,5,-104,-109,-120,-135,5,-136,5,5,-133,-208,-183,-182,-103,-110,-121,5,5,-184,]),'DIV_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,235,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),',':([1,2,3,4,5,6,7,8,9,13,14,15,16,19,21,23,24,27,30,31,32,33,34,35,37,38,39,40,41,43,44,47,52,53,54,55,62,63,70,72,73,74,75,76,78,79,80,81,82,83,86,88,91,95,97,98,99,100,101,102,103,104,105,106,107,108,111,130,134,137,144,146,147,152,156,157,159,160,162,164,166,167,168,170,172,174,178,180,188,198,200,207,208,209,210,212,213,219,246,248,251,252,253,256,260,261,262,264,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,302,304,306,307,310,311,312,313,314,315,317,319,320,321,324,325,326,334,335,336,337,338,339,341,344,],[-77,-94,-127,-101,-92,-138,-93,-89,-88,-79,-91,-100,-96,-131,-87,-90,-130,-97,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,-129,-80,-122,113,-83,-85,-82,-143,-141,-132,-123,161,-125,-151,-137,-146,-150,171,173,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-134,-39,-47,-1,-3,-15,-33,-74,224,-27,-1,-72,-59,-85,-104,-115,-117,249,161,-120,-135,-149,-148,-156,-155,-136,-17,224,-19,-18,-12,-11,-16,-133,-84,-85,-86,-167,224,-103,-118,-121,-124,-126,-163,-159,-157,-152,-147,-4,-50,-48,-52,-42,-40,-43,-41,-56,224,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-13,323,224,-30,-32,-31,-170,327,-73,224,-60,224,224,-119,-116,-164,-158,-165,-161,-160,-28,-20,-8,-6,-168,-166,-162,-58,-14,-171,-169,224,224,]),'CHAR':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[7,7,-94,-127,-101,-92,-93,-89,-88,-204,7,-91,-100,-96,-131,7,-87,-90,-130,-207,-97,-206,-95,-98,7,-99,-102,-128,7,-105,7,-129,-205,-122,7,-75,7,7,-212,-186,7,7,7,7,-108,7,-132,-137,7,-134,-76,-209,7,7,-181,7,-210,-211,-187,-185,7,-104,-109,-120,-135,7,-136,7,7,-133,-208,-183,-182,-103,-110,-121,7,7,-184,]),'CLOSEBRACK':([51,56,59,65,67,72,73,74,82,83,86,88,91,95,97,98,99,100,101,103,104,105,106,107,108,111,114,119,120,122,123,125,126,129,134,136,138,142,143,146,149,150,151,153,160,174,180,188,198,200,207,213,216,217,218,221,222,223,225,243,250,252,253,269,270,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,293,294,295,296,297,298,299,300,303,306,308,320,321,324,325,326,327,330,336,338,339,342,343,345,346,350,351,352,],[-75,125,-186,152,-108,-123,162,-125,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-39,-47,-1,-3,-15,-33,-74,-76,-174,-176,-172,216,-181,-173,222,-27,-188,-177,-190,-175,-59,-187,-185,246,-109,251,-17,-19,-18,-12,-11,-16,-167,-183,299,-202,-200,-182,-189,-191,-201,-110,-124,-126,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-170,326,-199,-184,-203,-180,-60,-178,-28,-20,-8,-6,-168,339,-179,-58,-171,-169,-195,-194,-192,-197,-198,-196,-193,]),'WHILE':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,244,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,132,-186,-76,-174,-176,-172,132,-181,-173,132,-188,-177,132,-190,-175,-187,-185,-183,132,-202,-200,-182,-189,-191,132,132,-201,309,-199,-184,-203,-180,132,-178,132,-179,132,132,132,-195,-194,-192,-197,132,132,-198,-196,-193,]),'STATIC':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,70,76,102,114,115,118,123,125,147,148,149,150,152,162,164,165,172,173,208,214,216,222,246,251,257,266,299,],[8,8,-94,-127,-101,-92,-93,-89,-88,-204,8,-91,-100,-96,-131,8,-87,-90,-130,-207,-97,-206,-95,-98,8,-99,-102,-128,8,-105,-129,-205,-122,8,-75,8,8,-212,-186,8,-132,-137,-134,-76,-209,8,8,-181,-210,-211,-187,-185,-104,-120,-135,8,-136,8,-133,-208,-183,-182,-103,-121,8,8,-184,]),'OR_OP':([82,83,86,88,91,95,97,98,99,100,101,103,104,105,106,107,108,134,137,174,180,188,198,200,207,269,270,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-51,-49,-53,-44,-29,189,-36,-5,-55,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'IF':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,145,-186,-76,-174,-176,-172,145,-181,-173,145,-188,-177,145,-190,-175,-187,-185,-183,145,-202,-200,-182,-189,-191,145,145,-201,-199,-184,-203,-180,145,-178,145,-179,145,145,145,-195,-194,-192,-197,145,145,-198,-196,-193,]),'EXTERN':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,70,76,102,114,115,118,123,125,147,148,149,150,152,162,164,165,172,173,208,214,216,222,246,251,257,266,299,],[9,9,-94,-127,-101,-92,-93,-89,-88,-204,9,-91,-100,-96,-131,9,-87,-90,-130,-207,-97,-206,-95,-98,9,-99,-102,-128,9,-105,-129,-205,-122,9,-75,9,9,-212,-186,9,-132,-137,-134,-76,-209,9,9,-181,-210,-211,-187,-185,-104,-120,-135,9,-136,9,-133,-208,-183,-182,-103,-121,9,9,-184,]),'CONSTANT':([50,51,56,59,84,85,87,89,90,92,93,94,96,109,112,114,116,119,120,122,123,124,125,126,129,133,136,138,140,141,142,143,149,150,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,298,299,300,301,303,305,308,322,323,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[82,-75,82,-186,82,82,82,-26,-21,-23,-22,-24,82,82,-25,-76,82,-174,-176,-172,82,82,-181,-173,82,82,-188,-177,82,82,-190,-175,-187,-185,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-183,82,-202,82,-200,-182,-189,82,-191,82,82,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,82,82,82,-201,82,82,82,82,-199,-184,-203,82,-180,82,-178,82,82,82,82,82,-179,82,82,82,82,-195,-194,-192,-197,82,82,-198,-196,-193,]),'SIZEOF':([50,51,56,59,84,85,87,89,90,92,93,94,96,109,112,114,116,119,120,122,123,124,125,126,129,133,136,138,140,141,142,143,149,150,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,298,299,300,301,303,305,308,322,323,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[87,-75,87,-186,87,87,87,-26,-21,-23,-22,-24,87,87,-25,-76,87,-174,-176,-172,87,87,-181,-173,87,87,-188,-177,87,87,-190,-175,-187,-185,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-183,87,-202,87,-200,-182,-189,87,-191,87,87,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,87,87,87,-201,87,87,87,87,-199,-184,-203,87,-180,87,-178,87,87,87,87,87,-179,87,87,87,87,-195,-194,-192,-197,87,87,-198,-196,-193,]),'/':([82,83,97,100,105,106,107,108,134,137,174,180,188,198,200,207,269,280,281,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-29,-5,-1,-3,-15,206,-27,-1,-17,-19,-18,-12,-11,-16,-4,206,206,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'!':([50,51,56,59,84,85,87,89,90,92,93,94,96,109,112,114,116,119,120,122,123,124,125,126,129,133,136,138,140,141,142,143,149,150,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,298,299,300,301,303,305,308,322,323,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[89,-75,89,-186,89,89,89,-26,-21,-23,-22,-24,89,89,-25,-76,89,-174,-176,-172,89,89,-181,-173,89,89,-188,-177,89,89,-190,-175,-187,-185,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-183,89,-202,89,-200,-182,-189,89,-191,89,89,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,89,89,89,-201,89,89,89,89,-199,-184,-203,89,-180,89,-178,89,89,89,89,89,-179,89,89,89,89,-195,-194,-192,-197,89,89,-198,-196,-193,]),'%':([82,83,97,100,105,106,107,108,134,137,174,180,188,198,200,207,269,280,281,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-29,-5,-1,-3,-15,205,-27,-1,-17,-19,-18,-12,-11,-16,-4,205,205,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'RIGHT_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,239,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'SEMI':([1,2,3,4,5,7,8,9,13,14,15,16,19,21,23,24,25,27,30,31,32,33,34,35,37,41,43,44,47,51,52,53,54,55,56,58,59,70,76,82,83,86,88,91,95,97,98,99,100,101,102,103,104,105,106,107,108,111,114,117,119,120,122,123,124,125,126,128,129,130,134,136,137,138,139,140,142,143,144,146,147,149,150,152,156,157,159,162,164,172,174,180,188,198,200,207,208,209,210,212,213,215,216,217,218,219,220,221,222,223,225,226,242,243,246,248,251,269,270,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,293,294,295,298,299,300,301,302,303,305,306,308,311,312,320,321,324,325,326,329,330,331,333,336,339,340,342,343,345,346,347,348,349,350,351,352,],[-77,-94,-127,-101,-92,-93,-89,-88,-79,-91,-100,-96,-131,-87,-90,-130,51,-97,-95,-98,-81,-99,-102,-128,-78,-105,-129,-80,-122,-75,114,-83,-85,-82,142,51,-186,-132,-137,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-134,-39,-47,-1,-3,-15,-33,-74,-76,51,-174,-176,-172,142,218,-181,-173,221,142,225,-27,-188,-1,-177,243,142,-190,-175,-72,-59,-85,-187,-185,-104,-115,-117,250,-120,-135,-136,-17,-19,-18,-12,-11,-16,-133,-84,-85,-86,-167,298,-183,142,-202,300,142,-200,-182,-189,-191,142,142,-201,-103,-118,-121,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-199,-184,-203,142,-73,-180,142,-60,-178,-119,-116,-28,-20,-8,-6,-168,142,-179,142,142,-58,-169,142,-195,-194,-192,-197,142,351,142,-198,-196,-193,]),'&':([50,51,56,59,82,83,84,85,87,88,89,90,92,93,94,95,96,97,99,100,103,104,105,106,107,108,109,112,114,116,119,120,122,123,124,125,126,129,133,134,136,137,138,140,141,142,143,149,150,158,163,169,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,207,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,269,270,272,274,275,276,277,280,281,283,284,285,286,287,288,289,293,294,295,298,299,300,301,303,305,308,320,321,322,323,324,325,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[90,-75,90,-186,-2,-27,90,90,90,182,-26,-21,-23,-22,-24,-44,90,-29,-36,-5,-39,-47,-1,-3,-15,-33,90,-25,-76,90,-174,-176,-172,90,90,-181,-173,90,90,-27,-188,-1,-177,90,90,-190,-175,-187,-185,90,90,90,-17,90,90,-19,90,90,90,90,90,90,90,-18,90,90,90,90,90,90,90,90,90,-12,-11,90,90,90,90,90,-16,90,-183,90,-202,90,-200,-182,-189,90,-191,90,90,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,90,90,90,-201,90,90,90,90,-4,182,-48,-42,-40,-43,-41,-34,-35,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-199,-184,-203,90,-180,90,-178,-28,-20,90,90,-8,-6,90,90,90,-179,90,90,90,90,-195,-194,-192,-197,90,90,-198,-196,-193,]),'+':([50,51,56,59,82,83,84,85,87,89,90,92,93,94,96,97,99,100,105,106,107,108,109,112,114,116,119,120,122,123,124,125,126,129,133,134,136,137,138,140,141,142,143,149,150,158,163,169,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,207,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,269,280,281,283,284,287,288,289,293,294,295,298,299,300,301,303,305,308,320,321,322,323,324,325,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[92,-75,92,-186,-2,-27,92,92,92,-26,-21,-23,-22,-24,92,-29,191,-5,-1,-3,-15,-33,92,-25,-76,92,-174,-176,-172,92,92,-181,-173,92,92,-27,-188,-1,-177,92,92,-190,-175,-187,-185,92,92,92,-17,92,92,-19,92,92,92,92,92,92,92,-18,92,92,92,92,92,92,92,92,92,-12,-11,92,92,92,92,92,-16,92,-183,92,-202,92,-200,-182,-189,92,-191,92,92,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,92,92,92,-201,92,92,92,92,-4,-34,-35,191,191,-9,-10,-7,-30,-32,-31,-199,-184,-203,92,-180,92,-178,-28,-20,92,92,-8,-6,92,92,92,-179,92,92,92,92,-195,-194,-192,-197,92,92,-198,-196,-193,]),'*':([0,1,2,3,4,5,6,7,8,9,12,13,14,15,16,18,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,37,38,39,41,43,44,46,47,50,51,55,56,57,58,59,62,66,68,69,70,76,79,82,83,84,85,87,89,90,92,93,94,96,97,100,102,105,106,107,108,109,112,113,114,115,116,117,119,120,122,123,124,125,126,129,133,134,136,137,138,140,141,142,143,147,148,149,150,152,154,155,158,162,163,164,165,169,172,174,175,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,207,208,211,214,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,249,251,258,265,266,269,280,281,287,288,289,293,294,295,298,299,300,301,303,305,308,320,321,322,323,324,325,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[6,-77,-94,-127,-101,-92,6,-93,-89,-88,-204,-79,-91,-100,-96,6,-131,6,-87,-90,-130,6,-207,-97,-206,-95,-98,-81,-99,-102,-128,-78,6,-142,-105,-129,-80,-205,-122,93,-75,-82,93,-212,6,-186,-143,-112,-114,6,-132,-137,6,-2,-27,93,93,93,-26,-21,-23,-22,-24,93,-29,-5,-134,-1,-3,-15,204,93,-25,6,-76,-209,93,6,-174,-176,-172,93,93,-181,-173,93,93,-27,-188,-1,-177,93,93,-190,-175,-210,-211,-187,-185,-104,-111,-113,93,-120,93,-135,6,93,-136,-17,93,6,93,-19,93,93,93,93,93,93,93,-18,93,93,93,93,93,93,93,93,93,-12,-11,93,93,93,93,93,-16,-133,93,-208,-183,93,-202,93,-200,-182,-189,93,-191,93,93,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,93,93,93,-201,93,-103,93,6,-121,93,93,6,-4,204,204,-9,-10,-7,-30,-32,-31,-199,-184,-203,93,-180,93,-178,-28,-20,93,93,-8,-6,93,93,93,-179,93,93,93,93,-195,-194,-192,-197,93,93,-198,-196,-193,]),'-':([50,51,56,59,82,83,84,85,87,89,90,92,93,94,96,97,99,100,105,106,107,108,109,112,114,116,119,120,122,123,124,125,126,129,133,134,136,137,138,140,141,142,143,149,150,158,163,169,174,175,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,207,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,269,280,281,283,284,287,288,289,293,294,295,298,299,300,301,303,305,308,320,321,322,323,324,325,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[94,-75,94,-186,-2,-27,94,94,94,-26,-21,-23,-22,-24,94,-29,192,-5,-1,-3,-15,-33,94,-25,-76,94,-174,-176,-172,94,94,-181,-173,94,94,-27,-188,-1,-177,94,94,-190,-175,-187,-185,94,94,94,-17,94,94,-19,94,94,94,94,94,94,94,-18,94,94,94,94,94,94,94,94,94,-12,-11,94,94,94,94,94,-16,94,-183,94,-202,94,-200,-182,-189,94,-191,94,94,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,94,94,94,-201,94,94,94,94,-4,-34,-35,192,192,-9,-10,-7,-30,-32,-31,-199,-184,-203,94,-180,94,-178,-28,-20,94,94,-8,-6,94,94,94,-179,94,94,94,94,-195,-194,-192,-197,94,94,-198,-196,-193,]),'UNSIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[15,15,-94,-127,-101,-92,-93,-89,-88,-204,15,-91,-100,-96,-131,15,-87,-90,-130,-207,-97,-206,-95,-98,15,-99,-102,-128,15,-105,15,-129,-205,-122,15,-75,15,15,-212,-186,15,15,15,15,-108,15,-132,-137,15,-134,-76,-209,15,15,-181,15,-210,-211,-187,-185,15,-104,-109,-120,-135,15,-136,15,15,-133,-208,-183,-182,-103,-110,-121,15,15,-184,]),'LONG':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[16,16,-94,-127,-101,-92,-93,-89,-88,-204,16,-91,-100,-96,-131,16,-87,-90,-130,-207,-97,-206,-95,-98,16,-99,-102,-128,16,-105,16,-129,-205,-122,16,-75,16,16,-212,-186,16,16,16,16,-108,16,-132,-137,16,-134,-76,-209,16,16,-181,16,-210,-211,-187,-185,16,-104,-109,-120,-135,16,-136,16,16,-133,-208,-183,-182,-103,-110,-121,16,16,-184,]),'.':([82,100,105,106,107,137,198,200,269,287,288,289,324,325,],[-2,-5,-1,-3,199,-1,-12,-11,-4,-9,-10,-7,-8,-6,]),'DEFAULT':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,131,-186,-76,-174,-176,-172,131,-181,-173,131,-188,-177,131,-190,-175,-187,-185,-183,131,-202,-200,-182,-189,-191,131,131,-201,-199,-184,-203,-180,131,-178,131,-179,131,131,131,-195,-194,-192,-197,131,131,-198,-196,-193,]),'SWITCH':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,135,-186,-76,-174,-176,-172,135,-181,-173,135,-188,-177,135,-190,-175,-187,-185,-183,135,-202,-200,-182,-189,-191,135,135,-201,-199,-184,-203,-180,135,-178,135,-179,135,135,135,-195,-194,-192,-197,135,135,-198,-196,-193,]),'AND_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,233,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'PTR_OP':([82,100,105,106,107,137,198,200,269,287,288,289,324,325,],[-2,-5,-1,-3,201,-1,-12,-11,-4,-9,-10,-7,-8,-6,]),'MUL_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,234,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'^':([82,83,86,88,95,97,99,100,103,104,105,106,107,108,134,137,174,180,188,198,200,207,269,270,272,273,274,275,276,277,280,281,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,179,-49,-44,-29,-36,-5,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,179,-42,-40,-43,-41,-34,-35,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,44,46,47,48,49,50,51,55,56,57,58,59,62,63,66,68,69,70,71,76,79,84,85,87,89,90,92,93,94,96,102,109,112,113,114,115,116,117,119,120,121,122,123,124,125,126,129,133,136,138,140,141,142,143,147,148,149,150,152,154,155,158,161,162,163,164,165,169,170,171,172,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,199,201,202,203,204,205,206,208,211,214,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,249,251,258,265,298,299,300,301,303,305,308,322,323,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[19,-77,-94,-127,-101,-92,-138,-93,-89,-88,41,19,-204,-79,-91,-100,-96,-107,19,-131,19,-87,47,-90,-130,19,-207,-97,-206,-106,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,-129,-80,-205,-122,74,75,105,-75,-82,137,-212,19,-186,-143,-141,-112,-114,19,-132,74,-137,19,105,105,105,-26,-21,-23,-22,-24,105,-134,105,-25,19,-76,-209,105,19,-174,-176,215,-172,137,105,-181,-173,137,105,-188,-177,137,105,-190,-175,-210,-211,-187,-185,-104,-111,-113,105,74,-120,105,-135,19,105,19,262,-136,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,287,288,105,105,105,105,105,-133,105,-208,-183,137,-202,105,-200,-182,-189,105,-191,137,105,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,105,105,137,-201,105,-103,105,19,-121,105,105,-199,-184,-203,105,-180,137,-178,105,105,105,105,137,-179,137,105,137,137,-195,-194,-192,-197,137,137,-198,-196,-193,]),'=':([19,24,43,54,70,74,76,82,83,100,102,105,106,107,134,137,147,164,172,174,180,188,198,200,207,208,210,269,287,288,289,320,321,324,325,],[-131,-130,-129,116,-132,163,-137,-2,-27,-5,-134,-1,-3,-15,237,-1,116,-135,-136,-17,-19,-18,-12,-11,-16,-133,116,-4,-9,-10,-7,-28,-20,-8,-6,]),'ADD_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,238,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'CLOSEPARAN':([1,2,3,4,5,6,7,8,9,13,14,15,16,19,21,23,24,27,30,31,32,33,34,35,37,38,39,40,41,43,44,45,47,49,55,62,63,66,68,70,75,76,77,78,79,80,81,82,83,86,88,91,95,97,98,99,100,101,102,103,104,105,106,107,108,134,142,144,146,152,154,155,162,164,165,166,167,168,170,172,174,176,177,178,180,188,198,200,202,207,208,225,246,251,254,255,256,257,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,302,304,306,307,310,313,314,315,316,317,319,320,321,324,325,328,334,335,336,337,341,344,],[-77,-94,-127,-101,-92,-138,-93,-89,-88,-79,-91,-100,-96,-131,-87,-90,-130,-97,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,-129,-80,70,-122,76,-82,-143,-141,-112,-114,-132,-151,-137,164,-146,-150,172,-144,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-134,-39,-47,-1,-3,-15,-33,-27,-190,-72,-59,-104,-111,-113,-120,-135,256,-149,-148,-156,-155,-136,-17,265,-153,269,-19,-18,-12,-11,289,-16,-133,-191,-103,-121,313,314,-163,315,-159,-157,-152,-145,-147,256,-154,-155,-4,-50,321,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-13,324,-30,-32,-31,-73,329,-60,331,333,-164,-158,-165,334,-161,-160,-28,-20,-8,-6,340,-166,-162,-58,-14,347,348,]),'$end':([12,19,20,24,26,28,43,46,51,57,70,76,102,114,115,125,147,148,150,164,172,208,214,216,222,299,],[-204,-131,0,-130,-207,-206,-129,-205,-75,-212,-132,-137,-134,-76,-209,-181,-210,-211,-185,-135,-136,-133,-208,-183,-182,-184,]),'CASE':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,133,-186,-76,-174,-176,-172,133,-181,-173,133,-188,-177,133,-190,-175,-187,-185,-183,133,-202,-200,-182,-189,-191,133,133,-201,-199,-184,-203,-180,133,-178,133,-179,133,133,133,-195,-194,-192,-197,133,133,-198,-196,-193,]),'TYPEDEF':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,70,76,102,114,115,118,123,125,147,148,149,150,152,162,164,165,172,173,208,214,216,222,246,251,257,266,299,],[21,21,-94,-127,-101,-92,-93,-89,-88,-204,21,-91,-100,-96,-131,21,-87,-90,-130,-207,-97,-206,-95,-98,21,-99,-102,-128,21,-105,-129,-205,-122,21,-75,21,21,-212,-186,21,-132,-137,-134,-76,-209,21,21,-181,-210,-211,-187,-185,-104,-120,-135,21,-136,21,-133,-208,-183,-182,-103,-121,21,21,-184,]),'GOTO':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,121,-186,-76,-174,-176,-172,121,-181,-173,121,-188,-177,121,-190,-175,-187,-185,-183,121,-202,-200,-182,-189,-191,121,121,-201,-199,-184,-203,-180,121,-178,121,-179,121,121,121,-195,-194,-192,-197,121,121,-198,-196,-193,]),'FOR':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,127,-186,-76,-174,-176,-172,127,-181,-173,127,-188,-177,127,-190,-175,-187,-185,-183,127,-202,-200,-182,-189,-191,127,127,-201,-199,-184,-203,-180,127,-178,127,-179,127,127,127,-195,-194,-192,-197,127,127,-198,-196,-193,]),'UNION':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[17,17,-94,-127,-101,-92,-93,-89,-88,-204,17,-91,-100,-96,-131,17,-87,-90,-130,-207,-97,-206,-95,-98,17,-99,-102,-128,17,-105,17,-129,-205,-122,17,-75,17,17,-212,-186,17,17,17,17,-108,17,-132,-137,17,-134,-76,-209,17,17,-181,17,-210,-211,-187,-185,17,-104,-109,-120,-135,17,-136,17,17,-133,-208,-183,-182,-103,-110,-121,17,17,-184,]),'AUTO':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,70,76,102,114,115,118,123,125,147,148,149,150,152,162,164,165,172,173,208,214,216,222,246,251,257,266,299,],[23,23,-94,-127,-101,-92,-93,-89,-88,-204,23,-91,-100,-96,-131,23,-87,-90,-130,-207,-97,-206,-95,-98,23,-99,-102,-128,23,-105,-129,-205,-122,23,-75,23,23,-212,-186,23,-132,-137,-134,-76,-209,23,23,-181,-210,-211,-187,-185,-104,-120,-135,23,-136,23,-133,-208,-183,-182,-103,-121,23,23,-184,]),'ENUM':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[22,22,-94,-127,-101,-92,-93,-89,-88,-204,22,-91,-100,-96,-131,22,-87,-90,-130,-207,-97,-206,-95,-98,22,-99,-102,-128,22,-105,22,-129,-205,-122,22,-75,22,22,-212,-186,22,22,22,22,-108,22,-132,-137,22,-134,-76,-209,22,22,-181,22,-210,-211,-187,-185,22,-104,-109,-120,-135,22,-136,22,22,-133,-208,-183,-182,-103,-110,-121,22,22,-184,]),'MOD_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,230,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'ELSE':([119,120,122,125,126,138,142,143,150,216,218,221,222,225,243,298,299,300,303,308,330,342,343,345,346,350,351,352,],[-174,-176,-172,-181,-173,-177,-190,-175,-185,-183,-202,-200,-182,-191,-201,-199,-184,-203,-180,-178,-179,-195,-194,349,-197,-198,-196,-193,]),'AND_OP':([82,83,86,88,91,95,97,99,100,101,103,104,105,106,107,108,134,137,174,180,188,198,200,207,269,270,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-51,-49,-53,-44,-29,-36,-5,193,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,-52,-42,-40,-43,-41,193,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'GE_OP':([82,83,95,97,99,100,103,105,106,107,108,134,137,174,180,188,198,200,207,269,274,275,276,277,280,281,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,186,-29,-36,-5,-39,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-42,-40,-43,-41,-34,-35,-37,-38,186,186,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'ELLIPSIS':([173,],[263,]),'LEFT_OP':([82,83,97,99,100,103,105,106,107,108,134,137,174,180,188,198,200,207,269,274,275,276,277,280,281,283,284,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-29,-36,-5,194,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,194,194,194,194,-34,-35,-37,-38,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'LE_OP':([82,83,95,97,99,100,103,105,106,107,108,134,137,174,180,188,198,200,207,269,274,275,276,277,280,281,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,184,-29,-36,-5,-39,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-42,-40,-43,-41,-34,-35,-37,-38,184,184,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'[':([1,2,3,4,5,6,7,8,9,13,14,15,16,19,21,23,24,27,30,31,32,33,34,35,37,38,39,40,41,43,44,47,55,62,63,66,68,70,76,79,82,100,102,105,106,107,137,152,154,155,162,164,165,168,170,172,177,198,200,208,246,251,256,260,261,266,268,269,287,288,289,313,314,315,317,319,324,325,334,335,],[-77,-94,-127,-101,-92,-138,-93,-89,-88,-79,-91,-100,-96,-131,-87,-90,50,-97,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,50,-80,-122,-82,-143,-141,-112,-114,-132,-137,169,-2,-5,-134,-1,-3,203,-1,-104,-111,-113,-120,-135,169,258,169,-136,169,-12,-11,-133,-103,-121,-163,-159,258,169,169,-4,-9,-10,-7,-164,-158,-165,-161,-160,-8,-6,-166,-162,]),']':([50,82,83,86,88,91,95,97,98,99,100,101,103,104,105,106,107,108,110,111,134,144,146,169,174,180,188,198,200,207,258,259,269,270,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,292,293,294,295,302,306,318,320,321,324,325,336,],[102,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-39,-47,-1,-3,-15,-33,208,-74,-27,-72,-59,260,-17,-19,-18,-12,-11,-16,317,319,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,325,-30,-32,-31,-73,-60,335,-28,-20,-8,-6,-58,]),'STRING_LITERAL':([50,51,56,59,84,85,87,89,90,92,93,94,96,109,112,114,116,119,120,122,123,124,125,126,129,133,136,138,140,141,142,143,149,150,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,298,299,300,301,303,305,308,322,323,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[106,-75,106,-186,106,106,106,-26,-21,-23,-22,-24,106,106,-25,-76,106,-174,-176,-172,106,106,-181,-173,106,106,-188,-177,106,106,-190,-175,-187,-185,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-183,106,-202,106,-200,-182,-189,106,-191,106,106,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,106,106,106,-201,106,106,106,106,-199,-184,-203,106,-180,106,-178,106,106,106,106,106,-179,106,106,106,106,-195,-194,-192,-197,106,106,-198,-196,-193,]),'SUB_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,229,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'RETURN':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,124,-186,-76,-174,-176,-172,124,-181,-173,124,-188,-177,124,-190,-175,-187,-185,-183,124,-202,-200,-182,-189,-191,124,124,-201,-199,-184,-203,-180,124,-178,124,-179,124,124,124,-195,-194,-192,-197,124,124,-198,-196,-193,]),':':([2,3,4,5,7,15,16,19,24,27,30,31,33,34,35,41,43,47,66,68,69,70,76,82,83,86,88,91,95,97,98,99,100,101,102,103,104,105,106,107,108,111,131,134,137,144,146,152,154,155,157,162,164,172,174,180,188,198,200,207,208,228,246,249,251,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,293,294,295,302,306,320,321,324,325,336,],[-94,-127,-101,-92,-93,-100,-96,-131,-130,-97,-95,-98,-99,-102,-128,-105,-129,-122,-112,-114,158,-132,-137,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-134,-39,-47,-1,-3,-15,-33,-74,226,-27,242,-72,-59,-104,-111,-113,247,-120,-135,-136,-17,-19,-18,-12,-11,-16,-133,305,-103,158,-121,-4,-50,-48,-52,-42,-40,-43,-41,-56,322,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-73,-60,-28,-20,-8,-6,-58,]),'STRUCT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[29,29,-94,-127,-101,-92,-93,-89,-88,-204,29,-91,-100,-96,-131,29,-87,-90,-130,-207,-97,-206,-95,-98,29,-99,-102,-128,29,-105,29,-129,-205,-122,29,-75,29,29,-212,-186,29,29,29,29,-108,29,-132,-137,29,-134,-76,-209,29,29,-181,29,-210,-211,-187,-185,29,-104,-109,-120,-135,29,-136,29,29,-133,-208,-183,-182,-103,-110,-121,29,29,-184,]),'XOR_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,231,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'INT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[30,30,-94,-127,-101,-92,-93,-89,-88,-204,30,-91,-100,-96,-131,30,-87,-90,-130,-207,-97,-206,-95,-98,30,-99,-102,-128,30,-105,30,-129,-205,-122,30,-75,30,30,-212,-186,30,30,30,30,-108,30,-132,-137,30,-134,-76,-209,30,30,-181,30,-210,-211,-187,-185,30,-104,-109,-120,-135,30,-136,30,30,-133,-208,-183,-182,-103,-110,-121,30,30,-184,]),'DOUBLE':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[31,31,-94,-127,-101,-92,-93,-89,-88,-204,31,-91,-100,-96,-131,31,-87,-90,-130,-207,-97,-206,-95,-98,31,-99,-102,-128,31,-105,31,-129,-205,-122,31,-75,31,31,-212,-186,31,31,31,31,-108,31,-132,-137,31,-134,-76,-209,31,31,-181,31,-210,-211,-187,-185,31,-104,-109,-120,-135,31,-136,31,31,-133,-208,-183,-182,-103,-110,-121,31,31,-184,]),'FLOAT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[27,27,-94,-127,-101,-92,-93,-89,-88,-204,27,-91,-100,-96,-131,27,-87,-90,-130,-207,-97,-206,-95,-98,27,-99,-102,-128,27,-105,27,-129,-205,-122,27,-75,27,27,-212,-186,27,27,27,27,-108,27,-132,-137,27,-134,-76,-209,27,27,-181,27,-210,-211,-187,-185,27,-104,-109,-120,-135,27,-136,27,27,-133,-208,-183,-182,-103,-110,-121,27,27,-184,]),'OR_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,232,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'SIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[33,33,-94,-127,-101,-92,-93,-89,-88,-204,33,-91,-100,-96,-131,33,-87,-90,-130,-207,-97,-206,-95,-98,33,-99,-102,-128,33,-105,33,-129,-205,-122,33,-75,33,33,-212,-186,33,33,33,33,-108,33,-132,-137,33,-134,-76,-209,33,33,-181,33,-210,-211,-187,-185,33,-104,-109,-120,-135,33,-136,33,33,-133,-208,-183,-182,-103,-110,-121,33,33,-184,]),'<':([82,83,95,97,99,100,103,105,106,107,108,134,137,174,180,188,198,200,207,269,274,275,276,277,280,281,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,185,-29,-36,-5,-39,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-42,-40,-43,-41,-34,-35,-37,-38,185,185,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'BREAK':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,139,-186,-76,-174,-176,-172,139,-181,-173,139,-188,-177,139,-190,-175,-187,-185,-183,139,-202,-200,-182,-189,-191,139,139,-201,-199,-184,-203,-180,139,-178,139,-179,139,139,139,-195,-194,-192,-197,139,139,-198,-196,-193,]),'CONTINUE':([51,56,59,114,119,120,122,123,125,126,129,136,138,140,142,143,149,150,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-75,128,-186,-76,-174,-176,-172,128,-181,-173,128,-188,-177,128,-190,-175,-187,-185,-183,128,-202,-200,-182,-189,-191,128,128,-201,-199,-184,-203,-180,128,-178,128,-179,128,128,128,-195,-194,-192,-197,128,128,-198,-196,-193,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,38,39,41,42,43,46,47,49,51,54,56,57,59,60,62,64,65,66,67,68,70,76,85,102,114,115,118,123,125,141,147,148,149,150,151,152,153,162,164,165,172,173,181,208,214,216,222,246,250,251,257,266,299,],[35,35,-94,-127,-101,-92,35,-93,-89,-88,-204,35,-91,-100,-96,-131,35,-87,-90,-130,-207,-97,-206,-95,-98,35,-99,-102,-128,35,35,-142,-105,35,-129,-205,-122,35,-75,35,35,-212,-186,35,-143,35,35,35,-108,35,-132,-137,35,-134,-76,-209,35,35,-181,35,-210,-211,-187,-185,35,-104,-109,-120,-135,35,-136,35,35,-133,-208,-183,-182,-103,-110,-121,35,35,-184,]),'?':([82,83,86,88,91,95,97,98,99,100,101,103,104,105,106,107,108,134,137,174,180,188,198,200,207,269,270,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-51,-49,-53,-44,-29,190,-36,-5,-55,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'error':([19,24,36,43,51,54,56,59,60,61,70,76,102,114,118,119,120,122,123,125,126,129,136,138,140,142,143,149,150,164,172,208,216,217,218,221,222,223,225,226,242,243,298,299,300,303,305,308,329,330,331,333,340,342,343,345,346,347,349,350,351,352,],[-131,-130,61,-129,-75,61,61,-186,61,61,-132,-137,-134,-76,61,-174,-176,-172,61,-181,-173,61,-188,-177,61,-190,-175,-187,-185,-135,-136,-133,-183,61,-202,-200,-182,-189,-191,61,61,-201,-199,-184,-203,-180,61,-178,61,-179,61,61,61,-195,-194,-192,-197,61,61,-198,-196,-193,]),'REGISTER':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,70,76,102,114,115,118,123,125,147,148,149,150,152,162,164,165,172,173,208,214,216,222,246,251,257,266,299,],[14,14,-94,-127,-101,-92,-93,-89,-88,-204,14,-91,-100,-96,-131,14,-87,-90,-130,-207,-97,-206,-95,-98,14,-99,-102,-128,14,-105,-129,-205,-122,14,-75,14,14,-212,-186,14,-132,-137,-134,-76,-209,14,14,-181,-210,-211,-187,-185,-104,-120,-135,14,-136,14,-133,-208,-183,-182,-103,-121,14,14,-184,]),'LEFT_ASSIGN':([82,83,100,105,106,107,134,137,174,180,188,198,200,207,269,287,288,289,320,321,324,325,],[-2,-27,-5,-1,-3,-15,236,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'>':([82,83,95,97,99,100,103,105,106,107,108,134,137,174,180,188,198,200,207,269,274,275,276,277,280,281,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,187,-29,-36,-5,-39,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-42,-40,-43,-41,-34,-35,-37,-38,187,187,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'INC_OP':([50,51,56,59,82,84,85,87,89,90,92,93,94,96,100,105,106,107,109,112,114,116,119,120,122,123,124,125,126,129,133,136,137,138,140,141,142,143,149,150,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,200,202,203,204,205,206,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,269,287,288,289,298,299,300,301,303,305,308,322,323,324,325,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[109,-75,109,-186,-2,109,109,109,-26,-21,-23,-22,-24,109,-5,-1,-3,200,109,-25,-76,109,-174,-176,-172,109,109,-181,-173,109,109,-188,-1,-177,109,109,-190,-175,-187,-185,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-12,-11,109,109,109,109,109,109,-183,109,-202,109,-200,-182,-189,109,-191,109,109,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,109,109,109,-201,109,109,109,109,-4,-9,-10,-7,-199,-184,-203,109,-180,109,-178,109,109,-8,-6,109,109,109,-179,109,109,109,109,-195,-194,-192,-197,109,109,-198,-196,-193,]),'|':([82,83,86,88,91,95,97,99,100,103,104,105,106,107,108,134,137,174,180,188,198,200,207,269,270,272,273,274,275,276,277,280,281,282,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-51,-49,183,-44,-29,-36,-5,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,-52,-42,-40,-43,-41,-34,-35,183,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'NE_OP':([82,83,95,97,99,100,103,104,105,106,107,108,134,137,174,180,188,198,200,207,269,272,274,275,276,277,280,281,283,284,285,286,287,288,289,293,294,295,320,321,324,325,],[-2,-27,-44,-29,-36,-5,-39,196,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,196,-42,-40,-43,-41,-34,-35,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'~':([50,51,56,59,84,85,87,89,90,92,93,94,96,109,112,114,116,119,120,122,123,124,125,126,129,133,136,138,140,141,142,143,149,150,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,216,217,218,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,258,265,298,299,300,301,303,305,308,322,323,327,328,329,330,331,332,333,340,342,343,345,346,347,349,350,351,352,],[112,-75,112,-186,112,112,112,-26,-21,-23,-22,-24,112,112,-25,-76,112,-174,-176,-172,112,112,-181,-173,112,112,-188,-177,112,112,-190,-175,-187,-185,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-183,112,-202,112,-200,-182,-189,112,-191,112,112,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,112,112,112,-201,112,112,112,112,-199,-184,-203,112,-180,112,-178,112,112,112,112,112,-179,112,112,112,112,-195,-194,-192,-197,112,112,-198,-196,-193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,13,20,32,36,49,54,56,60,118,123,165,173,257,266,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'expression_statement':([56,123,129,140,217,220,226,242,301,305,329,331,333,340,347,349,],[119,119,119,119,119,301,119,119,328,119,119,119,119,119,119,119,]),'type_name':([85,141,181,],[176,176,271,]),'unary_expression':([50,56,84,85,87,96,109,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,217,220,224,226,227,240,241,242,245,247,258,265,301,305,322,323,327,328,329,331,332,333,340,347,349,],[83,134,174,134,180,83,207,134,134,134,134,83,134,134,83,83,83,134,83,134,83,83,83,83,83,83,83,134,83,83,83,83,83,83,83,134,134,83,83,83,134,134,134,134,134,134,134,134,134,134,83,83,83,134,134,83,134,134,134,134,134,134,134,134,134,134,]),'conditional_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,181,190,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[111,146,146,146,146,146,146,111,146,146,111,111,111,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,111,111,146,146,336,146,146,146,146,146,146,146,146,146,146,]),'struct_or_union_specifier':([0,1,13,20,32,36,42,49,54,56,60,64,65,66,68,85,118,123,141,151,165,173,181,257,266,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'exclusive_or_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,181,183,189,190,193,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,273,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'initializer':([116,211,327,],[212,296,338,]),'iteration_statement':([56,123,129,140,217,226,242,305,329,331,333,340,347,349,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'init_declarator_list':([25,58,117,],[52,52,52,]),'struct_declaration_list':([42,64,],[65,151,]),'enumerator':([48,71,161,],[72,72,252,]),'abstract_declarator':([79,165,177,266,],[166,255,267,255,]),'pointer':([0,6,18,20,25,38,58,69,79,113,117,165,177,249,266,],[11,40,11,11,11,63,11,11,170,11,11,170,268,11,268,]),'and_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,179,181,183,189,190,193,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,270,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'external_declaration':([0,20,],[12,46,]),'type_specifier':([0,1,13,20,32,36,42,49,54,56,60,64,65,66,68,85,118,123,141,151,165,173,181,257,266,],[13,13,13,13,13,13,66,13,13,13,13,66,66,66,66,66,13,13,66,66,13,13,66,13,13,]),'compound_statement':([36,54,56,60,61,118,123,129,140,217,226,242,305,329,331,333,340,347,349,],[57,115,126,148,150,214,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'inclusive_or_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,181,189,190,193,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,282,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'logical_or_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,181,190,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'selection_statement':([56,123,129,140,217,226,242,305,329,331,333,340,347,349,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'postfix_expression':([50,56,84,85,87,96,109,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,217,220,224,226,227,240,241,242,245,247,258,265,301,305,322,323,327,328,329,331,332,333,340,347,349,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'relational_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,189,190,193,196,197,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,285,286,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'statement':([56,123,129,140,217,226,242,305,329,331,333,340,347,349,],[136,136,223,244,223,303,308,330,342,343,345,346,350,352,]),'unary_operator':([50,56,84,85,87,96,109,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,217,220,224,226,227,240,241,242,245,247,258,265,301,305,322,323,327,328,329,331,332,333,340,347,349,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'cast_expression':([50,56,85,96,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,217,220,224,226,227,240,241,242,245,247,258,265,301,305,322,323,327,328,329,331,332,333,340,347,349,],[97,97,97,188,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,293,294,295,97,97,97,97,97,97,97,97,97,97,97,97,320,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'initializer_list':([211,],[297,]),'struct_declarator_list':([69,],[159,]),'multiplicative_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,280,281,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'translation_unit':([0,],[20,]),'assignment_operator':([134,],[240,]),'struct_or_union':([0,1,13,20,32,36,42,49,54,56,60,64,65,66,68,85,118,123,141,151,165,173,181,257,266,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'struct_declaration':([42,64,65,151,],[67,67,153,153,]),'assignment_expression':([56,85,116,123,124,129,140,141,175,181,190,202,203,211,217,220,224,226,227,240,241,242,245,301,305,323,327,328,329,331,332,333,340,347,349,],[144,144,213,144,144,144,144,144,144,144,144,290,144,213,144,144,302,144,144,306,144,144,144,144,144,337,213,144,144,144,144,144,144,144,144,]),'parameter_type_list':([49,165,257,266,],[77,254,316,254,]),'parameter_declaration':([49,165,173,257,266,],[78,78,264,78,78,]),'direct_declarator':([0,11,18,20,25,58,69,79,113,117,165,170,249,],[24,43,24,24,24,24,24,24,24,24,24,43,24,]),'type_qualifier_list':([6,],[38,]),'argument_expression_list':([202,],[291,]),'direct_abstract_declarator':([79,165,170,177,266,268,],[168,168,261,168,168,261,]),'additive_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,184,185,186,187,189,190,193,194,195,196,197,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,283,284,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'equality_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,189,190,193,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,272,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'primary_expression':([50,56,84,85,87,96,109,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,202,203,204,205,206,211,217,220,224,226,227,240,241,242,245,247,258,265,301,305,322,323,327,328,329,331,332,333,340,347,349,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'declaration_specifiers':([0,1,13,20,32,36,49,54,56,60,118,123,165,173,257,266,],[25,37,44,25,55,58,79,117,117,117,117,117,79,79,79,79,]),'declaration':([0,20,36,54,56,60,118,123,],[26,26,59,59,59,149,149,149,]),'logical_and_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,181,189,190,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,278,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'declarator':([0,18,20,25,58,69,79,113,117,165,249,],[36,45,36,54,147,157,167,210,210,45,157,]),'shift_expression':([50,56,85,116,123,124,129,133,140,141,158,163,169,175,179,181,182,183,184,185,186,187,189,190,193,196,197,202,203,211,217,220,224,226,227,240,241,242,245,247,258,301,305,322,323,327,328,329,331,332,333,340,347,349,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,274,275,276,277,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'identifier_list':([49,],[80,]),'jump_statement':([56,123,129,140,217,226,242,305,329,331,333,340,347,349,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'struct_declarator':([69,249,],[156,312,]),'function_definition':([0,20,],[28,28,]),'parameter_list':([49,165,257,266,],[81,81,81,81,]),'enum_specifier':([0,1,13,20,32,36,42,49,54,56,60,64,65,66,68,85,118,123,141,151,165,173,181,257,266,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'type_qualifier':([0,1,6,13,20,32,36,38,42,49,54,56,60,64,65,66,68,85,118,123,141,151,165,173,181,257,266,],[32,32,39,32,32,32,32,62,68,32,32,32,32,68,68,68,68,68,32,32,68,68,32,32,68,32,32,]),'enumerator_list':([48,71,],[73,160,]),'labeled_statement':([56,123,129,140,217,226,242,305,329,331,333,340,347,349,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'declaration_list':([36,54,56,],[60,118,123,]),'specifier_qualifier_list':([42,64,65,66,68,85,141,151,181,],[69,69,69,154,155,177,177,69,177,]),'constant_expression':([50,133,158,163,169,247,258,],[110,228,248,253,259,311,318,]),'init_declarator':([25,58,113,117,],[53,53,209,53,]),'statement_list':([56,123,],[129,217,]),'expression':([56,85,123,124,129,140,141,175,181,190,203,217,220,226,227,241,242,245,301,305,328,329,331,332,333,340,347,349,],[130,178,130,219,130,130,178,178,178,279,292,130,130,130,304,307,130,310,130,130,341,130,130,344,130,130,130,130,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression_1','cparser.py',6),
  ('primary_expression -> CONSTANT','primary_expression',1,'p_primary_expression_2','cparser.py',10),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression_3','cparser.py',13),
  ('primary_expression -> OPENPARAN expression CLOSEPARAN','primary_expression',3,'p_primary_expression_4','cparser.py',16),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','cparser.py',19),
  ('postfix_expression -> postfix_expression [ expression ]','postfix_expression',4,'p_postfix_expression_2','cparser.py',22),
  ('postfix_expression -> postfix_expression OPENPARAN CLOSEPARAN','postfix_expression',3,'p_postfix_expression_3','cparser.py',25),
  ('postfix_expression -> postfix_expression OPENPARAN argument_expression_list CLOSEPARAN','postfix_expression',4,'p_postfix_expression_4','cparser.py',28),
  ('postfix_expression -> postfix_expression . IDENTIFIER','postfix_expression',3,'p_postfix_expression_5','cparser.py',31),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression_6','cparser.py',34),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','cparser.py',37),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','cparser.py',40),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','cparser.py',43),
  ('argument_expression_list -> argument_expression_list , assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','cparser.py',46),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','cparser.py',49),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','cparser.py',52),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','cparser.py',55),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','cparser.py',58),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','cparser.py',61),
  ('unary_expression -> SIZEOF OPENPARAN type_name CLOSEPARAN','unary_expression',4,'p_unary_expression_6','cparser.py',64),
  ('unary_operator -> &','unary_operator',1,'p_unary_operator_1','cparser.py',67),
  ('unary_operator -> *','unary_operator',1,'p_unary_operator_2','cparser.py',70),
  ('unary_operator -> +','unary_operator',1,'p_unary_operator_3','cparser.py',73),
  ('unary_operator -> -','unary_operator',1,'p_unary_operator_4','cparser.py',76),
  ('unary_operator -> ~','unary_operator',1,'p_unary_operator_5','cparser.py',79),
  ('unary_operator -> !','unary_operator',1,'p_unary_operator_6','cparser.py',82),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','cparser.py',85),
  ('cast_expression -> OPENPARAN type_name CLOSEPARAN cast_expression','cast_expression',4,'p_cast_expression_2','cparser.py',88),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','cparser.py',91),
  ('multiplicative_expression -> multiplicative_expression * cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','cparser.py',94),
  ('multiplicative_expression -> multiplicative_expression / cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','cparser.py',97),
  ('multiplicative_expression -> multiplicative_expression % cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','cparser.py',100),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','cparser.py',103),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression_2','cparser.py',106),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression_3','cparser.py',109),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','cparser.py',112),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','cparser.py',115),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','cparser.py',118),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','cparser.py',121),
  ('relational_expression -> relational_expression < shift_expression','relational_expression',3,'p_relational_expression_2','cparser.py',124),
  ('relational_expression -> relational_expression > shift_expression','relational_expression',3,'p_relational_expression_3','cparser.py',127),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','cparser.py',130),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','cparser.py',133),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','cparser.py',136),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','cparser.py',139),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','cparser.py',142),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','cparser.py',145),
  ('and_expression -> and_expression & equality_expression','and_expression',3,'p_and_expression_2','cparser.py',148),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','cparser.py',151),
  ('exclusive_or_expression -> exclusive_or_expression ^ and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','cparser.py',154),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','cparser.py',157),
  ('inclusive_or_expression -> inclusive_or_expression | exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','cparser.py',160),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','cparser.py',163),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','cparser.py',166),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','cparser.py',169),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','cparser.py',172),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','cparser.py',175),
  ('conditional_expression -> logical_or_expression ? expression : conditional_expression','conditional_expression',5,'p_conditional_expression_2','cparser.py',178),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','cparser.py',181),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','cparser.py',184),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator_1','cparser.py',187),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','cparser.py',190),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','cparser.py',193),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','cparser.py',196),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','cparser.py',199),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','cparser.py',202),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','cparser.py',205),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','cparser.py',208),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','cparser.py',211),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','cparser.py',214),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','cparser.py',217),
  ('expression -> assignment_expression','expression',1,'p_expression_1','cparser.py',220),
  ('expression -> expression , assignment_expression','expression',3,'p_expression_2','cparser.py',223),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','cparser.py',226),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','cparser.py',229),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','cparser.py',232),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','cparser.py',235),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','cparser.py',238),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','cparser.py',241),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','cparser.py',245),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','cparser.py',248),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','cparser.py',251),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','cparser.py',254),
  ('init_declarator_list -> init_declarator_list , init_declarator','init_declarator_list',3,'p_init_declarator_list_2','cparser.py',257),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','cparser.py',260),
  ('init_declarator -> declarator = initializer','init_declarator',3,'p_init_declarator_2','cparser.py',263),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_1','cparser.py',266),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_2','cparser.py',269),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','cparser.py',272),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_4','cparser.py',275),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_5','cparser.py',278),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','cparser.py',281),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','cparser.py',285),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','cparser.py',288),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','cparser.py',291),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','cparser.py',294),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','cparser.py',297),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','cparser.py',300),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','cparser.py',303),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','cparser.py',306),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','cparser.py',309),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','cparser.py',312),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER OPENBRACK struct_declaration_list CLOSEBRACK','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','cparser.py',315),
  ('struct_or_union_specifier -> struct_or_union OPENBRACK struct_declaration_list CLOSEBRACK','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','cparser.py',318),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','cparser.py',321),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','cparser.py',324),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','cparser.py',327),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','cparser.py',330),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','cparser.py',333),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','cparser.py',336),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','cparser.py',339),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_2','cparser.py',342),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_3','cparser.py',345),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_4','cparser.py',348),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','cparser.py',351),
  ('struct_declarator_list -> struct_declarator_list , struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','cparser.py',354),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','cparser.py',357),
  ('struct_declarator -> : constant_expression','struct_declarator',2,'p_struct_declarator_2','cparser.py',360),
  ('struct_declarator -> declarator : constant_expression','struct_declarator',3,'p_struct_declarator_3','cparser.py',363),
  ('enum_specifier -> ENUM OPENBRACK enumerator_list CLOSEBRACK','enum_specifier',4,'p_enum_specifier_1','cparser.py',366),
  ('enum_specifier -> ENUM IDENTIFIER OPENBRACK enumerator_list CLOSEBRACK','enum_specifier',5,'p_enum_specifier_2','cparser.py',369),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier_3','cparser.py',372),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','cparser.py',375),
  ('enumerator_list -> enumerator_list , enumerator','enumerator_list',3,'p_enumerator_list_2','cparser.py',378),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator_1','cparser.py',381),
  ('enumerator -> IDENTIFIER = constant_expression','enumerator',3,'p_enumerator_2','cparser.py',384),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','cparser.py',387),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','cparser.py',390),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_1','cparser.py',393),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_2','cparser.py',396),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator_1','cparser.py',400),
  ('direct_declarator -> OPENPARAN declarator CLOSEPARAN','direct_declarator',3,'p_direct_declarator_2','cparser.py',406),
  ('direct_declarator -> direct_declarator [ constant_expression ]','direct_declarator',4,'p_direct_declarator_3','cparser.py',409),
  ('direct_declarator -> direct_declarator [ ]','direct_declarator',3,'p_direct_declarator_4','cparser.py',412),
  ('direct_declarator -> direct_declarator OPENPARAN parameter_type_list CLOSEPARAN','direct_declarator',4,'p_direct_declarator_5','cparser.py',415),
  ('direct_declarator -> direct_declarator OPENPARAN identifier_list CLOSEPARAN','direct_declarator',4,'p_direct_declarator_6','cparser.py',425),
  ('direct_declarator -> direct_declarator OPENPARAN CLOSEPARAN','direct_declarator',3,'p_direct_declarator_7','cparser.py',428),
  ('pointer -> *','pointer',1,'p_pointer_1','cparser.py',433),
  ('pointer -> * type_qualifier_list','pointer',2,'p_pointer_2','cparser.py',436),
  ('pointer -> * pointer','pointer',2,'p_pointer_3','cparser.py',439),
  ('pointer -> * type_qualifier_list pointer','pointer',3,'p_pointer_4','cparser.py',442),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','cparser.py',445),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','cparser.py',448),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','cparser.py',451),
  ('parameter_type_list -> parameter_list , ELLIPSIS','parameter_type_list',3,'p_parameter_type_list_2','cparser.py',455),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','cparser.py',458),
  ('parameter_list -> parameter_list , parameter_declaration','parameter_list',3,'p_parameter_list_2','cparser.py',463),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','cparser.py',469),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_2','cparser.py',474),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_3','cparser.py',477),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list_1','cparser.py',480),
  ('identifier_list -> identifier_list , IDENTIFIER','identifier_list',3,'p_identifier_list_2','cparser.py',486),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','cparser.py',492),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','cparser.py',495),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','cparser.py',498),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','cparser.py',501),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','cparser.py',504),
  ('direct_abstract_declarator -> OPENPARAN abstract_declarator CLOSEPARAN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','cparser.py',507),
  ('direct_abstract_declarator -> [ ]','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','cparser.py',510),
  ('direct_abstract_declarator -> [ constant_expression ]','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','cparser.py',513),
  ('direct_abstract_declarator -> direct_abstract_declarator [ ]','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','cparser.py',516),
  ('direct_abstract_declarator -> direct_abstract_declarator [ constant_expression ]','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','cparser.py',519),
  ('direct_abstract_declarator -> OPENPARAN CLOSEPARAN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','cparser.py',522),
  ('direct_abstract_declarator -> OPENPARAN parameter_type_list CLOSEPARAN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','cparser.py',525),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPARAN CLOSEPARAN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','cparser.py',528),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPARAN parameter_type_list CLOSEPARAN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','cparser.py',531),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','cparser.py',534),
  ('initializer -> OPENBRACK initializer_list CLOSEBRACK','initializer',3,'p_initializer_2','cparser.py',537),
  ('initializer -> OPENBRACK initializer_list , CLOSEBRACK','initializer',4,'p_initializer_3','cparser.py',540),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','cparser.py',543),
  ('initializer_list -> initializer_list , initializer','initializer_list',3,'p_initializer_list_2','cparser.py',546),
  ('statement -> labeled_statement','statement',1,'p_statement_1','cparser.py',549),
  ('statement -> compound_statement','statement',1,'p_statement_2','cparser.py',552),
  ('statement -> expression_statement','statement',1,'p_statement_3','cparser.py',555),
  ('statement -> selection_statement','statement',1,'p_statement_4','cparser.py',558),
  ('statement -> iteration_statement','statement',1,'p_statement_5','cparser.py',561),
  ('statement -> jump_statement','statement',1,'p_statement_6','cparser.py',564),
  ('labeled_statement -> IDENTIFIER : statement','labeled_statement',3,'p_labeled_statement_1','cparser.py',567),
  ('labeled_statement -> CASE constant_expression : statement','labeled_statement',4,'p_labeled_statement_2','cparser.py',570),
  ('labeled_statement -> DEFAULT : statement','labeled_statement',3,'p_labeled_statement_3','cparser.py',573),
  ('compound_statement -> OPENBRACK CLOSEBRACK','compound_statement',2,'p_compound_statement_1','cparser.py',576),
  ('compound_statement -> OPENBRACK statement_list CLOSEBRACK','compound_statement',3,'p_compound_statement_2','cparser.py',580),
  ('compound_statement -> OPENBRACK declaration_list CLOSEBRACK','compound_statement',3,'p_compound_statement_3','cparser.py',584),
  ('compound_statement -> OPENBRACK declaration_list statement_list CLOSEBRACK','compound_statement',4,'p_compound_statement_4','cparser.py',588),
  ('compound_statement -> error compound_statement','compound_statement',2,'p_compound_statement_error','cparser.py',591),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','cparser.py',596),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_2','cparser.py',599),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','cparser.py',602),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','cparser.py',605),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','cparser.py',608),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','cparser.py',611),
  ('selection_statement -> IF OPENPARAN expression CLOSEPARAN statement','selection_statement',5,'p_selection_statement_1','cparser.py',615),
  ('selection_statement -> IF OPENPARAN expression CLOSEPARAN statement ELSE statement','selection_statement',7,'p_selection_statement_2','cparser.py',618),
  ('selection_statement -> SWITCH OPENPARAN expression CLOSEPARAN statement','selection_statement',5,'p_selection_statement_3','cparser.py',621),
  ('iteration_statement -> WHILE OPENPARAN expression CLOSEPARAN statement','iteration_statement',5,'p_iteration_statement_1','cparser.py',624),
  ('iteration_statement -> DO statement WHILE OPENPARAN expression CLOSEPARAN SEMI','iteration_statement',7,'p_iteration_statement_2','cparser.py',627),
  ('iteration_statement -> FOR OPENPARAN expression_statement expression_statement CLOSEPARAN statement','iteration_statement',6,'p_iteration_statement_3','cparser.py',630),
  ('iteration_statement -> FOR OPENPARAN expression_statement expression_statement expression CLOSEPARAN statement','iteration_statement',7,'p_iteration_statement_4','cparser.py',633),
  ('jump_statement -> GOTO IDENTIFIER SEMI','jump_statement',3,'p_jump_statement_1','cparser.py',636),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','cparser.py',639),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','cparser.py',642),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','cparser.py',645),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','cparser.py',648),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','cparser.py',651),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','cparser.py',654),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','cparser.py',657),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','cparser.py',660),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_1','cparser.py',663),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_2','cparser.py',667),
  ('function_definition -> declarator declaration_specifiers declarator','function_definition',3,'p_function_definition_error','cparser.py',673),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_3','cparser.py',676),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_4','cparser.py',680),
]
