
# /Users/appleseed/Documents/school/cs660/compiler/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '77DC907F509C80758B8BEC1D0DCA5E54'
    
_lr_action_items = {'RIGHT_OP':([81,82,96,98,99,102,104,105,106,107,132,135,172,178,186,196,198,205,267,272,273,274,275,278,279,281,282,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-29,-36,-5,193,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,193,193,193,193,-34,-35,-37,-38,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'DO':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,139,-187,-76,-174,-176,-172,139,-185,-173,139,-189,-177,139,-191,-175,-187,-203,-201,-189,-192,139,139,-186,-202,-200,-204,-180,139,-178,139,-179,139,139,139,-196,-195,-193,-198,139,139,-199,-197,-194,]),'SHORT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[2,2,-94,-127,-101,-92,-93,-89,-88,-205,2,-91,-100,-96,-131,2,-87,-90,-130,-208,-97,-207,-95,-98,2,-99,-102,-128,2,-105,2,-129,-206,-122,2,-75,2,2,-212,-187,2,2,2,2,-108,2,-132,-137,2,-134,-76,-210,2,-174,-176,-172,2,-185,-173,2,-189,-177,2,-191,-175,-211,-188,2,-104,-109,-120,-135,2,-136,2,2,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,2,2,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'CONST':([0,1,2,3,4,5,6,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,38,39,41,42,43,46,47,49,51,54,56,57,59,60,61,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[3,3,-94,-127,-101,-92,3,-93,-89,-88,-205,3,-91,-100,-96,-131,3,-87,-90,-130,-208,-97,-207,-95,-98,3,-99,-102,-128,3,3,-142,-105,3,-129,-206,-122,3,-75,3,3,-212,-187,3,-143,3,3,3,-108,3,-132,-137,3,-134,-76,-210,3,-174,-176,-172,3,-185,-173,3,-189,-177,3,-191,-175,-211,-188,3,-104,-109,-120,-135,3,-136,3,3,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,3,3,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'ADD_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,235,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'OPENBRACK':([10,17,19,22,24,29,36,41,43,47,51,54,56,59,60,69,75,101,113,115,116,117,118,120,121,123,124,127,134,137,139,141,142,148,162,170,206,208,213,215,218,219,222,223,239,240,241,296,297,300,302,305,324,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[42,-107,-131,48,-130,-106,56,63,-129,70,-75,56,56,-187,56,-132,-137,-134,-76,208,56,-174,-176,-172,56,-185,-173,56,-189,-177,56,-191,-175,-188,-135,-136,-133,208,-187,-203,-201,-189,-192,56,56,-186,-202,-200,-204,-180,56,-178,208,56,-179,56,56,56,-196,-195,-193,-198,56,56,-199,-197,-194,]),'DEC_OP':([50,51,56,59,81,83,84,86,88,89,91,92,93,95,99,104,105,106,108,111,113,115,117,118,120,121,122,123,124,127,131,134,135,137,139,140,141,142,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,267,285,286,287,296,297,298,300,302,305,319,320,321,322,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[83,-75,83,-187,-2,83,83,83,-26,-21,-23,-22,-24,83,-5,-1,-3,196,83,-25,-76,83,-174,-176,-172,83,83,-185,-173,83,83,-189,-1,-177,83,83,-191,-175,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-12,-11,83,83,83,83,83,83,-187,-203,83,-201,-189,83,-192,83,83,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,83,83,83,-186,-202,83,83,83,83,-4,-9,-10,-7,-200,-204,83,-180,83,-178,83,83,-8,-6,83,83,83,-179,83,83,83,83,-196,-195,-193,-198,83,83,-199,-197,-194,]),'OPENPARAN':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,18,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,37,38,39,40,41,43,44,46,47,50,51,55,56,57,58,59,61,62,65,67,68,69,75,78,81,83,84,86,88,89,91,92,93,95,99,101,104,105,106,108,111,112,113,114,115,117,118,120,121,122,123,124,125,127,130,131,133,134,135,137,139,140,141,142,144,147,150,152,153,156,160,161,162,163,166,167,168,170,173,175,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,206,208,211,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,247,249,254,256,258,259,263,264,266,267,285,286,287,296,297,298,300,302,305,306,310,311,312,314,316,319,320,321,322,324,325,326,327,328,329,330,331,332,337,339,340,342,343,344,346,347,348,349,],[18,-77,-94,-127,-101,-92,-138,-93,-89,-88,18,-205,-79,-91,-100,-96,18,-131,18,-87,-90,49,18,-208,-97,-207,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,49,-80,-206,-122,84,-75,-82,140,-212,18,-187,-143,-141,-112,-114,18,-132,-137,163,-2,173,140,179,-26,-21,-23,-22,-24,84,-5,-134,-1,-3,200,173,-25,18,-76,-210,140,-174,-176,-172,140,140,-185,-173,217,140,224,84,238,-189,-1,-177,140,140,-191,-175,243,-211,-104,-111,-113,84,-120,84,-135,163,255,84,163,-136,140,264,84,140,84,84,84,84,84,84,84,140,84,84,84,84,84,84,84,-12,-11,140,140,84,84,84,-133,140,-209,-187,-203,140,-201,-189,140,-192,140,140,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,140,140,140,-186,-202,140,-103,84,18,-121,-163,84,-159,255,84,264,264,-4,-9,-10,-7,-200,-204,140,-180,140,-178,329,-164,-158,-165,-161,-160,84,140,-8,-6,140,140,140,-179,140,140,140,-166,-162,140,-196,-195,-193,-198,140,140,-199,-197,-194,]),'VOID':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[5,5,-94,-127,-101,-92,-93,-89,-88,-205,5,-91,-100,-96,-131,5,-87,-90,-130,-208,-97,-207,-95,-98,5,-99,-102,-128,5,-105,5,-129,-206,-122,5,-75,5,5,-212,-187,5,5,5,5,-108,5,-132,-137,5,-134,-76,-210,5,-174,-176,-172,5,-185,-173,5,-189,-177,5,-191,-175,-211,-188,5,-104,-109,-120,-135,5,-136,5,5,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,5,5,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'DIV_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,232,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),',':([1,2,3,4,5,6,7,8,9,13,14,15,16,19,21,23,24,27,30,31,32,33,34,35,37,38,39,40,41,43,44,47,52,53,54,55,61,62,69,71,72,73,74,75,77,78,79,80,81,82,85,87,90,94,96,97,98,99,100,101,102,103,104,105,106,107,110,128,132,135,143,145,146,150,154,155,157,158,160,162,164,165,166,168,170,172,176,178,186,196,198,205,206,207,209,210,216,244,246,249,250,251,254,258,259,260,262,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,299,301,303,304,307,308,309,310,311,312,314,316,317,318,321,322,323,331,332,333,334,335,336,338,341,],[-77,-94,-127,-101,-92,-138,-93,-89,-88,-79,-91,-100,-96,-131,-87,-90,-130,-97,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,-129,-80,-122,112,-83,-85,-82,-143,-141,-132,-123,159,-125,-151,-137,-146,-150,169,171,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-134,-39,-47,-1,-3,-15,-33,-74,221,-27,-1,-72,-59,-85,-104,-115,-117,247,159,-120,-135,-149,-148,-156,-155,-136,-17,221,-19,-18,-12,-11,-16,-133,-84,-86,-167,221,-103,-118,-121,-124,-126,-163,-159,-157,-152,-147,-4,-50,-48,-52,-42,-40,-43,-41,-56,221,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-13,320,221,-30,-32,-31,-170,324,-73,221,-60,221,221,-119,-116,-164,-158,-165,-161,-160,-28,-20,-8,-6,-168,-166,-162,-58,-14,-171,-169,221,221,]),'CHAR':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[7,7,-94,-127,-101,-92,-93,-89,-88,-205,7,-91,-100,-96,-131,7,-87,-90,-130,-208,-97,-207,-95,-98,7,-99,-102,-128,7,-105,7,-129,-206,-122,7,-75,7,7,-212,-187,7,7,7,7,-108,7,-132,-137,7,-134,-76,-210,7,-174,-176,-172,7,-185,-173,7,-189,-177,7,-191,-175,-211,-188,7,-104,-109,-120,-135,7,-136,7,7,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,7,7,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'CLOSEBRACK':([51,56,59,64,66,71,72,73,81,82,85,87,90,94,96,97,98,99,100,102,103,104,105,106,107,110,113,117,118,120,121,123,124,127,132,134,136,137,141,142,145,149,151,158,172,178,186,196,198,205,210,213,214,215,218,219,220,222,240,241,248,250,251,267,268,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,291,292,293,294,295,296,297,300,303,305,317,318,321,322,323,324,327,333,335,336,339,340,342,343,347,348,349,],[-75,123,-187,150,-108,-123,160,-125,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-39,-47,-1,-3,-15,-33,-74,-76,-174,-176,-172,-182,-185,-173,-181,-27,-189,240,-177,-191,-175,-59,244,-109,249,-17,-19,-18,-12,-11,-16,-167,-187,-183,-203,-201,-189,-184,-192,-186,-202,-110,-124,-126,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-170,323,-200,-204,-180,-60,-178,-28,-20,-8,-6,-168,336,-179,-58,-171,-169,-196,-195,-193,-198,-199,-197,-194,]),'WHILE':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,242,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,130,-187,-76,-174,-176,-172,130,-185,-173,130,-189,-177,130,-191,-175,-187,-203,-201,-189,-192,130,130,-186,-202,306,-200,-204,-180,130,-178,130,-179,130,130,130,-196,-195,-193,-198,130,130,-199,-197,-194,]),'STATIC':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,69,75,101,113,114,116,117,118,120,121,123,124,127,134,137,141,142,147,148,150,160,162,163,170,171,206,211,213,215,218,219,222,240,241,244,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[8,8,-94,-127,-101,-92,-93,-89,-88,-205,8,-91,-100,-96,-131,8,-87,-90,-130,-208,-97,-207,-95,-98,8,-99,-102,-128,8,-105,-129,-206,-122,8,-75,8,8,-212,-187,8,-132,-137,-134,-76,-210,8,-174,-176,-172,8,-185,-173,8,-189,-177,-191,-175,-211,-188,-104,-120,-135,8,-136,8,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-121,8,8,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'OR_OP':([81,82,85,87,90,94,96,97,98,99,100,102,103,104,105,106,107,132,135,172,178,186,196,198,205,267,268,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-51,-49,-53,-44,-29,187,-36,-5,-55,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'IF':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,144,-187,-76,-174,-176,-172,144,-185,-173,144,-189,-177,144,-191,-175,-187,-203,-201,-189,-192,144,144,-186,-202,-200,-204,-180,144,-178,144,-179,144,144,144,-196,-195,-193,-198,144,144,-199,-197,-194,]),'EXTERN':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,69,75,101,113,114,116,117,118,120,121,123,124,127,134,137,141,142,147,148,150,160,162,163,170,171,206,211,213,215,218,219,222,240,241,244,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[9,9,-94,-127,-101,-92,-93,-89,-88,-205,9,-91,-100,-96,-131,9,-87,-90,-130,-208,-97,-207,-95,-98,9,-99,-102,-128,9,-105,-129,-206,-122,9,-75,9,9,-212,-187,9,-132,-137,-134,-76,-210,9,-174,-176,-172,9,-185,-173,9,-189,-177,-191,-175,-211,-188,-104,-120,-135,9,-136,9,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-121,9,9,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'CONSTANT':([50,51,56,59,83,84,86,88,89,91,92,93,95,108,111,113,115,117,118,120,121,122,123,124,127,131,134,137,139,140,141,142,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,296,297,298,300,302,305,319,320,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[81,-75,81,-187,81,81,81,-26,-21,-23,-22,-24,81,81,-25,-76,81,-174,-176,-172,81,81,-185,-173,81,81,-189,-177,81,81,-191,-175,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-187,-203,81,-201,-189,81,-192,81,81,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,81,81,81,-186,-202,81,81,81,81,-200,-204,81,-180,81,-178,81,81,81,81,81,-179,81,81,81,81,-196,-195,-193,-198,81,81,-199,-197,-194,]),'SIZEOF':([50,51,56,59,83,84,86,88,89,91,92,93,95,108,111,113,115,117,118,120,121,122,123,124,127,131,134,137,139,140,141,142,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,296,297,298,300,302,305,319,320,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[86,-75,86,-187,86,86,86,-26,-21,-23,-22,-24,86,86,-25,-76,86,-174,-176,-172,86,86,-185,-173,86,86,-189,-177,86,86,-191,-175,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-187,-203,86,-201,-189,86,-192,86,86,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,86,86,86,-186,-202,86,86,86,86,-200,-204,86,-180,86,-178,86,86,86,86,86,-179,86,86,86,86,-196,-195,-193,-198,86,86,-199,-197,-194,]),'/':([81,82,96,99,104,105,106,107,132,135,172,178,186,196,198,205,267,278,279,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-29,-5,-1,-3,-15,204,-27,-1,-17,-19,-18,-12,-11,-16,-4,204,204,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'!':([50,51,56,59,83,84,86,88,89,91,92,93,95,108,111,113,115,117,118,120,121,122,123,124,127,131,134,137,139,140,141,142,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,296,297,298,300,302,305,319,320,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[88,-75,88,-187,88,88,88,-26,-21,-23,-22,-24,88,88,-25,-76,88,-174,-176,-172,88,88,-185,-173,88,88,-189,-177,88,88,-191,-175,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-187,-203,88,-201,-189,88,-192,88,88,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,88,88,88,-186,-202,88,88,88,88,-200,-204,88,-180,88,-178,88,88,88,88,88,-179,88,88,88,88,-196,-195,-193,-198,88,88,-199,-197,-194,]),'%':([81,82,96,99,104,105,106,107,132,135,172,178,186,196,198,205,267,278,279,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-29,-5,-1,-3,-15,203,-27,-1,-17,-19,-18,-12,-11,-16,-4,203,203,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'RIGHT_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,236,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'SEMI':([1,2,3,4,5,7,8,9,13,14,15,16,19,21,23,24,25,27,30,31,32,33,34,35,37,41,43,44,47,51,52,53,54,55,56,58,59,69,75,81,82,85,87,90,94,96,97,98,99,100,101,102,103,104,105,106,107,110,113,117,118,120,121,122,123,124,126,127,128,132,134,135,137,138,139,141,142,143,145,146,150,154,155,157,160,162,170,172,178,186,196,198,205,206,207,209,210,212,213,215,216,217,218,219,222,223,239,240,241,244,246,249,267,268,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,291,292,293,296,297,298,299,300,302,303,305,308,309,317,318,321,322,323,326,327,328,330,333,336,337,339,340,342,343,344,345,346,347,348,349,],[-77,-94,-127,-101,-92,-93,-89,-88,-79,-91,-100,-96,-131,-87,-90,-130,51,-97,-95,-98,-81,-99,-102,-128,-78,-105,-129,-80,-122,-75,113,-83,-85,-82,141,51,-187,-132,-137,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-134,-39,-47,-1,-3,-15,-33,-74,-76,-174,-176,-172,141,215,-185,-173,218,141,222,-27,-189,-1,-177,241,141,-191,-175,-72,-59,-85,-104,-115,-117,248,-120,-135,-136,-17,-19,-18,-12,-11,-16,-133,-84,-86,-167,296,-187,-203,297,141,-201,-189,-192,141,141,-186,-202,-103,-118,-121,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-200,-204,141,-73,-180,141,-60,-178,-119,-116,-28,-20,-8,-6,-168,141,-179,141,141,-58,-169,141,-196,-195,-193,-198,141,348,141,-199,-197,-194,]),'&':([50,51,56,59,81,82,83,84,86,87,88,89,91,92,93,94,95,96,98,99,102,103,104,105,106,107,108,111,113,115,117,118,120,121,122,123,124,127,131,132,134,135,137,139,140,141,142,156,161,167,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,267,268,270,272,273,274,275,278,279,281,282,283,284,285,286,287,291,292,293,296,297,298,300,302,305,317,318,319,320,321,322,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[89,-75,89,-187,-2,-27,89,89,89,180,-26,-21,-23,-22,-24,-44,89,-29,-36,-5,-39,-47,-1,-3,-15,-33,89,-25,-76,89,-174,-176,-172,89,89,-185,-173,89,89,-27,-189,-1,-177,89,89,-191,-175,89,89,89,-17,89,89,-19,89,89,89,89,89,89,89,-18,89,89,89,89,89,89,89,89,89,-12,-11,89,89,89,89,89,-16,89,-187,-203,89,-201,-189,89,-192,89,89,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,89,89,89,-186,-202,89,89,89,89,-4,180,-48,-42,-40,-43,-41,-34,-35,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-200,-204,89,-180,89,-178,-28,-20,89,89,-8,-6,89,89,89,-179,89,89,89,89,-196,-195,-193,-198,89,89,-199,-197,-194,]),'+':([50,51,56,59,81,82,83,84,86,88,89,91,92,93,95,96,98,99,104,105,106,107,108,111,113,115,117,118,120,121,122,123,124,127,131,132,134,135,137,139,140,141,142,156,161,167,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,267,278,279,281,282,285,286,287,291,292,293,296,297,298,300,302,305,317,318,319,320,321,322,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[91,-75,91,-187,-2,-27,91,91,91,-26,-21,-23,-22,-24,91,-29,189,-5,-1,-3,-15,-33,91,-25,-76,91,-174,-176,-172,91,91,-185,-173,91,91,-27,-189,-1,-177,91,91,-191,-175,91,91,91,-17,91,91,-19,91,91,91,91,91,91,91,-18,91,91,91,91,91,91,91,91,91,-12,-11,91,91,91,91,91,-16,91,-187,-203,91,-201,-189,91,-192,91,91,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,91,91,91,-186,-202,91,91,91,91,-4,-34,-35,189,189,-9,-10,-7,-30,-32,-31,-200,-204,91,-180,91,-178,-28,-20,91,91,-8,-6,91,91,91,-179,91,91,91,91,-196,-195,-193,-198,91,91,-199,-197,-194,]),'*':([0,1,2,3,4,5,6,7,8,9,12,13,14,15,16,18,20,21,23,25,26,27,28,30,31,32,33,34,35,37,38,39,41,44,46,47,50,51,55,56,57,58,59,61,65,67,68,78,81,82,83,84,86,88,89,91,92,93,95,96,99,104,105,106,107,108,111,112,113,114,115,117,118,120,121,122,123,124,127,131,132,134,135,137,139,140,141,142,147,150,152,153,156,160,161,163,167,172,173,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,208,211,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,247,249,256,263,264,267,278,279,285,286,287,291,292,293,296,297,298,300,302,305,317,318,319,320,321,322,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[6,-77,-94,-127,-101,-92,6,-93,-89,-88,-205,-79,-91,-100,-96,6,6,-87,-90,6,-208,-97,-207,-95,-98,-81,-99,-102,-128,-78,6,-142,-105,-80,-206,-122,92,-75,-82,92,-212,6,-187,-143,-112,-114,6,6,-2,-27,92,92,92,-26,-21,-23,-22,-24,92,-29,-5,-1,-3,-15,202,92,-25,6,-76,-210,92,-174,-176,-172,92,92,-185,-173,92,92,-27,-189,-1,-177,92,92,-191,-175,-211,-104,-111,-113,92,-120,92,6,92,-17,92,6,92,-19,92,92,92,92,92,92,92,-18,92,92,92,92,92,92,92,92,92,-12,-11,92,92,92,92,92,-16,92,-209,-187,-203,92,-201,-189,92,-192,92,92,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,92,92,92,-186,-202,92,-103,92,6,-121,92,92,6,-4,202,202,-9,-10,-7,-30,-32,-31,-200,-204,92,-180,92,-178,-28,-20,92,92,-8,-6,92,92,92,-179,92,92,92,92,-196,-195,-193,-198,92,92,-199,-197,-194,]),'-':([50,51,56,59,81,82,83,84,86,88,89,91,92,93,95,96,98,99,104,105,106,107,108,111,113,115,117,118,120,121,122,123,124,127,131,132,134,135,137,139,140,141,142,156,161,167,172,173,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,205,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,267,278,279,281,282,285,286,287,291,292,293,296,297,298,300,302,305,317,318,319,320,321,322,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[93,-75,93,-187,-2,-27,93,93,93,-26,-21,-23,-22,-24,93,-29,190,-5,-1,-3,-15,-33,93,-25,-76,93,-174,-176,-172,93,93,-185,-173,93,93,-27,-189,-1,-177,93,93,-191,-175,93,93,93,-17,93,93,-19,93,93,93,93,93,93,93,-18,93,93,93,93,93,93,93,93,93,-12,-11,93,93,93,93,93,-16,93,-187,-203,93,-201,-189,93,-192,93,93,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,93,93,93,-186,-202,93,93,93,93,-4,-34,-35,190,190,-9,-10,-7,-30,-32,-31,-200,-204,93,-180,93,-178,-28,-20,93,93,-8,-6,93,93,93,-179,93,93,93,93,-196,-195,-193,-198,93,93,-199,-197,-194,]),'UNSIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[15,15,-94,-127,-101,-92,-93,-89,-88,-205,15,-91,-100,-96,-131,15,-87,-90,-130,-208,-97,-207,-95,-98,15,-99,-102,-128,15,-105,15,-129,-206,-122,15,-75,15,15,-212,-187,15,15,15,15,-108,15,-132,-137,15,-134,-76,-210,15,-174,-176,-172,15,-185,-173,15,-189,-177,15,-191,-175,-211,-188,15,-104,-109,-120,-135,15,-136,15,15,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,15,15,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'LONG':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[16,16,-94,-127,-101,-92,-93,-89,-88,-205,16,-91,-100,-96,-131,16,-87,-90,-130,-208,-97,-207,-95,-98,16,-99,-102,-128,16,-105,16,-129,-206,-122,16,-75,16,16,-212,-187,16,16,16,16,-108,16,-132,-137,16,-134,-76,-210,16,-174,-176,-172,16,-185,-173,16,-189,-177,16,-191,-175,-211,-188,16,-104,-109,-120,-135,16,-136,16,16,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,16,16,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'.':([81,99,104,105,106,135,196,198,267,285,286,287,321,322,],[-2,-5,-1,-3,197,-1,-12,-11,-4,-9,-10,-7,-8,-6,]),'DEFAULT':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,129,-187,-76,-174,-176,-172,129,-185,-173,129,-189,-177,129,-191,-175,-187,-203,-201,-189,-192,129,129,-186,-202,-200,-204,-180,129,-178,129,-179,129,129,129,-196,-195,-193,-198,129,129,-199,-197,-194,]),'SWITCH':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,133,-187,-76,-174,-176,-172,133,-185,-173,133,-189,-177,133,-191,-175,-187,-203,-201,-189,-192,133,133,-186,-202,-200,-204,-180,133,-178,133,-179,133,133,133,-196,-195,-193,-198,133,133,-199,-197,-194,]),'AND_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,230,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'PTR_OP':([81,99,104,105,106,135,196,198,267,285,286,287,321,322,],[-2,-5,-1,-3,199,-1,-12,-11,-4,-9,-10,-7,-8,-6,]),'MUL_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,231,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'^':([81,82,85,87,94,96,98,99,102,103,104,105,106,107,132,135,172,178,186,196,198,205,267,268,270,271,272,273,274,275,278,279,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,177,-49,-44,-29,-36,-5,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,177,-42,-40,-43,-41,-34,-35,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,44,46,47,48,49,50,51,55,56,57,58,59,61,62,65,67,68,70,78,83,84,86,88,89,91,92,93,95,108,111,112,113,114,115,117,118,119,120,121,122,123,124,127,131,134,137,139,140,141,142,147,150,152,153,156,159,160,161,163,167,168,169,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,197,199,200,201,202,203,204,208,211,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,247,249,256,263,296,297,298,300,302,305,319,320,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[19,-77,-94,-127,-101,-92,-138,-93,-89,-88,41,19,-205,-79,-91,-100,-96,-107,19,19,-87,47,-90,19,-208,-97,-207,-106,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,-80,-206,-122,73,74,104,-75,-82,135,-212,19,-187,-143,-141,-112,-114,19,73,19,104,104,104,-26,-21,-23,-22,-24,104,104,-25,19,-76,-210,104,-174,-176,212,-172,135,104,-185,-173,135,104,-189,-177,135,104,-191,-175,-211,-104,-111,-113,104,73,-120,104,19,104,19,260,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,285,286,104,104,104,104,104,104,-209,-187,-203,104,-201,-189,104,-192,135,104,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,104,104,135,-186,-202,104,-103,104,19,-121,104,104,-200,-204,104,-180,135,-178,104,104,104,104,135,-179,135,104,135,135,-196,-195,-193,-198,135,135,-199,-197,-194,]),'=':([19,24,43,54,69,73,75,81,82,99,101,104,105,106,132,135,146,162,170,172,178,186,196,198,205,206,267,285,286,287,317,318,321,322,],[-131,-130,-129,115,-132,161,-137,-2,-27,-5,-134,-1,-3,-15,234,-1,115,-135,-136,-17,-19,-18,-12,-11,-16,-133,-4,-9,-10,-7,-28,-20,-8,-6,]),'EQ_OP':([81,82,94,96,98,99,102,103,104,105,106,107,132,135,172,178,186,196,198,205,267,270,272,273,274,275,278,279,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-44,-29,-36,-5,-39,195,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,195,-42,-40,-43,-41,-34,-35,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'CLOSEPARAN':([1,2,3,4,5,6,7,8,9,13,14,15,16,19,21,23,24,27,30,31,32,33,34,35,37,38,39,40,41,43,44,45,47,49,55,61,62,65,67,69,74,75,76,77,78,79,80,81,82,85,87,90,94,96,97,98,99,100,101,102,103,104,105,106,107,132,141,143,145,150,152,153,160,162,163,164,165,166,168,170,172,174,175,176,178,186,196,198,200,205,206,222,244,249,252,253,254,255,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,299,301,303,304,307,310,311,312,313,314,316,317,318,321,322,325,331,332,333,334,338,341,],[-77,-94,-127,-101,-92,-138,-93,-89,-88,-79,-91,-100,-96,-131,-87,-90,-130,-97,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,-129,-80,69,-122,75,-82,-143,-141,-112,-114,-132,-151,-137,162,-146,-150,170,-144,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-134,-39,-47,-1,-3,-15,-33,-27,-191,-72,-59,-104,-111,-113,-120,-135,254,-149,-148,-156,-155,-136,-17,263,-153,267,-19,-18,-12,-11,287,-16,-133,-192,-103,-121,310,311,-163,312,-159,-157,-152,-145,-147,254,-154,-155,-4,-50,318,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-13,321,-30,-32,-31,-73,326,-60,328,330,-164,-158,-165,331,-161,-160,-28,-20,-8,-6,337,-166,-162,-58,-14,344,345,]),'$end':([12,20,26,28,46,51,57,113,114,123,147,211,240,],[-205,0,-208,-207,-206,-75,-212,-76,-210,-185,-211,-209,-186,]),'CASE':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,131,-187,-76,-174,-176,-172,131,-185,-173,131,-189,-177,131,-191,-175,-187,-203,-201,-189,-192,131,131,-186,-202,-200,-204,-180,131,-178,131,-179,131,131,131,-196,-195,-193,-198,131,131,-199,-197,-194,]),'TYPEDEF':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,69,75,101,113,114,116,117,118,120,121,123,124,127,134,137,141,142,147,148,150,160,162,163,170,171,206,211,213,215,218,219,222,240,241,244,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[21,21,-94,-127,-101,-92,-93,-89,-88,-205,21,-91,-100,-96,-131,21,-87,-90,-130,-208,-97,-207,-95,-98,21,-99,-102,-128,21,-105,-129,-206,-122,21,-75,21,21,-212,-187,21,-132,-137,-134,-76,-210,21,-174,-176,-172,21,-185,-173,21,-189,-177,-191,-175,-211,-188,-104,-120,-135,21,-136,21,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-121,21,21,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'GOTO':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,119,-187,-76,-174,-176,-172,119,-185,-173,119,-189,-177,119,-191,-175,-187,-203,-201,-189,-192,119,119,-186,-202,-200,-204,-180,119,-178,119,-179,119,119,119,-196,-195,-193,-198,119,119,-199,-197,-194,]),'FOR':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,125,-187,-76,-174,-176,-172,125,-185,-173,125,-189,-177,125,-191,-175,-187,-203,-201,-189,-192,125,125,-186,-202,-200,-204,-180,125,-178,125,-179,125,125,125,-196,-195,-193,-198,125,125,-199,-197,-194,]),'UNION':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[17,17,-94,-127,-101,-92,-93,-89,-88,-205,17,-91,-100,-96,-131,17,-87,-90,-130,-208,-97,-207,-95,-98,17,-99,-102,-128,17,-105,17,-129,-206,-122,17,-75,17,17,-212,-187,17,17,17,17,-108,17,-132,-137,17,-134,-76,-210,17,-174,-176,-172,17,-185,-173,17,-189,-177,17,-191,-175,-211,-188,17,-104,-109,-120,-135,17,-136,17,17,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,17,17,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'AUTO':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,69,75,101,113,114,116,117,118,120,121,123,124,127,134,137,141,142,147,148,150,160,162,163,170,171,206,211,213,215,218,219,222,240,241,244,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[23,23,-94,-127,-101,-92,-93,-89,-88,-205,23,-91,-100,-96,-131,23,-87,-90,-130,-208,-97,-207,-95,-98,23,-99,-102,-128,23,-105,-129,-206,-122,23,-75,23,23,-212,-187,23,-132,-137,-134,-76,-210,23,-174,-176,-172,23,-185,-173,23,-189,-177,-191,-175,-211,-188,-104,-120,-135,23,-136,23,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-121,23,23,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'ENUM':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[22,22,-94,-127,-101,-92,-93,-89,-88,-205,22,-91,-100,-96,-131,22,-87,-90,-130,-208,-97,-207,-95,-98,22,-99,-102,-128,22,-105,22,-129,-206,-122,22,-75,22,22,-212,-187,22,22,22,22,-108,22,-132,-137,22,-134,-76,-210,22,-174,-176,-172,22,-185,-173,22,-189,-177,22,-191,-175,-211,-188,22,-104,-109,-120,-135,22,-136,22,22,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,22,22,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'MOD_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,227,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'ELSE':([117,118,120,123,124,137,141,142,215,218,222,240,241,296,297,300,305,327,339,340,342,343,347,348,349,],[-174,-176,-172,-185,-173,-177,-191,-175,-203,-201,-192,-186,-202,-200,-204,-180,-178,-179,-196,-195,346,-198,-199,-197,-194,]),'AND_OP':([81,82,85,87,90,94,96,98,99,100,102,103,104,105,106,107,132,135,172,178,186,196,198,205,267,268,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-51,-49,-53,-44,-29,-36,-5,191,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,-52,-42,-40,-43,-41,191,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'GE_OP':([81,82,94,96,98,99,102,104,105,106,107,132,135,172,178,186,196,198,205,267,272,273,274,275,278,279,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,184,-29,-36,-5,-39,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-42,-40,-43,-41,-34,-35,-37,-38,184,184,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'ELLIPSIS':([171,],[261,]),'LEFT_OP':([81,82,96,98,99,102,104,105,106,107,132,135,172,178,186,196,198,205,267,272,273,274,275,278,279,281,282,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-29,-36,-5,192,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,192,192,192,192,-34,-35,-37,-38,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'LE_OP':([81,82,94,96,98,99,102,104,105,106,107,132,135,172,178,186,196,198,205,267,272,273,274,275,278,279,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,182,-29,-36,-5,-39,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-42,-40,-43,-41,-34,-35,-37,-38,182,182,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'[':([1,2,3,4,5,6,7,8,9,13,14,15,16,19,21,23,24,27,30,31,32,33,34,35,37,38,39,40,41,43,44,47,55,61,62,65,67,69,75,78,81,99,101,104,105,106,135,150,152,153,160,162,163,166,168,170,175,196,198,206,244,249,254,258,259,264,266,267,285,286,287,310,311,312,314,316,321,322,331,332,],[-77,-94,-127,-101,-92,-138,-93,-89,-88,-79,-91,-100,-96,-131,-87,-90,50,-97,-95,-98,-81,-99,-102,-128,-78,-139,-142,-140,-105,50,-80,-122,-82,-143,-141,-112,-114,-132,-137,167,-2,-5,-134,-1,-3,201,-1,-104,-111,-113,-120,-135,167,256,167,-136,167,-12,-11,-133,-103,-121,-163,-159,256,167,167,-4,-9,-10,-7,-164,-158,-165,-161,-160,-8,-6,-166,-162,]),']':([50,81,82,85,87,90,94,96,97,98,99,100,102,103,104,105,106,107,109,110,132,143,145,167,172,178,186,196,198,205,256,257,267,268,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,290,291,292,293,299,303,315,317,318,321,322,333,],[101,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-39,-47,-1,-3,-15,-33,206,-74,-27,-72,-59,258,-17,-19,-18,-12,-11,-16,314,316,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,322,-30,-32,-31,-73,-60,332,-28,-20,-8,-6,-58,]),'STRING_LITERAL':([50,51,56,59,83,84,86,88,89,91,92,93,95,108,111,113,115,117,118,120,121,122,123,124,127,131,134,137,139,140,141,142,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,296,297,298,300,302,305,319,320,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[105,-75,105,-187,105,105,105,-26,-21,-23,-22,-24,105,105,-25,-76,105,-174,-176,-172,105,105,-185,-173,105,105,-189,-177,105,105,-191,-175,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-187,-203,105,-201,-189,105,-192,105,105,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,105,105,105,-186,-202,105,105,105,105,-200,-204,105,-180,105,-178,105,105,105,105,105,-179,105,105,105,105,-196,-195,-193,-198,105,105,-199,-197,-194,]),'SUB_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,226,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'RETURN':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,122,-187,-76,-174,-176,-172,122,-185,-173,122,-189,-177,122,-191,-175,-187,-203,-201,-189,-192,122,122,-186,-202,-200,-204,-180,122,-178,122,-179,122,122,122,-196,-195,-193,-198,122,122,-199,-197,-194,]),':':([2,3,4,5,7,15,16,19,24,27,30,31,33,34,35,41,43,47,65,67,68,69,75,81,82,85,87,90,94,96,97,98,99,100,101,102,103,104,105,106,107,110,129,132,135,143,145,150,152,153,155,160,162,170,172,178,186,196,198,205,206,225,244,247,249,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,291,292,293,299,303,317,318,321,322,333,],[-94,-127,-101,-92,-93,-100,-96,-131,-130,-97,-95,-98,-99,-102,-128,-105,-129,-122,-112,-114,156,-132,-137,-2,-27,-51,-49,-53,-44,-29,-57,-36,-5,-55,-134,-39,-47,-1,-3,-15,-33,-74,223,-27,239,-72,-59,-104,-111,-113,245,-120,-135,-136,-17,-19,-18,-12,-11,-16,-133,302,-103,156,-121,-4,-50,-48,-52,-42,-40,-43,-41,-56,319,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-73,-60,-28,-20,-8,-6,-58,]),'STRUCT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[29,29,-94,-127,-101,-92,-93,-89,-88,-205,29,-91,-100,-96,-131,29,-87,-90,-130,-208,-97,-207,-95,-98,29,-99,-102,-128,29,-105,29,-129,-206,-122,29,-75,29,29,-212,-187,29,29,29,29,-108,29,-132,-137,29,-134,-76,-210,29,-174,-176,-172,29,-185,-173,29,-189,-177,29,-191,-175,-211,-188,29,-104,-109,-120,-135,29,-136,29,29,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,29,29,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'XOR_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,228,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'INT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[30,30,-94,-127,-101,-92,-93,-89,-88,-205,30,-91,-100,-96,-131,30,-87,-90,-130,-208,-97,-207,-95,-98,30,-99,-102,-128,30,-105,30,-129,-206,-122,30,-75,30,30,-212,-187,30,30,30,30,-108,30,-132,-137,30,-134,-76,-210,30,-174,-176,-172,30,-185,-173,30,-189,-177,30,-191,-175,-211,-188,30,-104,-109,-120,-135,30,-136,30,30,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,30,30,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'DOUBLE':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[31,31,-94,-127,-101,-92,-93,-89,-88,-205,31,-91,-100,-96,-131,31,-87,-90,-130,-208,-97,-207,-95,-98,31,-99,-102,-128,31,-105,31,-129,-206,-122,31,-75,31,31,-212,-187,31,31,31,31,-108,31,-132,-137,31,-134,-76,-210,31,-174,-176,-172,31,-185,-173,31,-189,-177,31,-191,-175,-211,-188,31,-104,-109,-120,-135,31,-136,31,31,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,31,31,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'FLOAT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[27,27,-94,-127,-101,-92,-93,-89,-88,-205,27,-91,-100,-96,-131,27,-87,-90,-130,-208,-97,-207,-95,-98,27,-99,-102,-128,27,-105,27,-129,-206,-122,27,-75,27,27,-212,-187,27,27,27,27,-108,27,-132,-137,27,-134,-76,-210,27,-174,-176,-172,27,-185,-173,27,-189,-177,27,-191,-175,-211,-188,27,-104,-109,-120,-135,27,-136,27,27,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,27,27,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'OR_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,229,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'SIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,42,43,46,47,49,51,54,56,57,59,60,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[33,33,-94,-127,-101,-92,-93,-89,-88,-205,33,-91,-100,-96,-131,33,-87,-90,-130,-208,-97,-207,-95,-98,33,-99,-102,-128,33,-105,33,-129,-206,-122,33,-75,33,33,-212,-187,33,33,33,33,-108,33,-132,-137,33,-134,-76,-210,33,-174,-176,-172,33,-185,-173,33,-189,-177,33,-191,-175,-211,-188,33,-104,-109,-120,-135,33,-136,33,33,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,33,33,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'<':([81,82,94,96,98,99,102,104,105,106,107,132,135,172,178,186,196,198,205,267,272,273,274,275,278,279,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,183,-29,-36,-5,-39,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-42,-40,-43,-41,-34,-35,-37,-38,183,183,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'BREAK':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,138,-187,-76,-174,-176,-172,138,-185,-173,138,-189,-177,138,-191,-175,-187,-203,-201,-189,-192,138,138,-186,-202,-200,-204,-180,138,-178,138,-179,138,138,138,-196,-195,-193,-198,138,138,-199,-197,-194,]),'CONTINUE':([51,56,59,113,117,118,120,121,123,124,127,134,137,139,141,142,213,215,218,219,222,223,239,240,241,296,297,300,302,305,326,327,328,330,337,339,340,342,343,344,346,347,348,349,],[-75,126,-187,-76,-174,-176,-172,126,-185,-173,126,-189,-177,126,-191,-175,-187,-203,-201,-189,-192,126,126,-186,-202,-200,-204,-180,126,-178,126,-179,126,126,126,-196,-195,-193,-198,126,126,-199,-197,-194,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,38,39,41,42,43,46,47,49,51,54,56,57,59,60,61,63,64,65,66,67,69,75,84,101,113,114,116,117,118,120,121,123,124,127,134,137,140,141,142,147,148,149,150,151,160,162,163,170,171,179,206,211,213,215,218,219,222,240,241,244,248,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[35,35,-94,-127,-101,-92,35,-93,-89,-88,-205,35,-91,-100,-96,-131,35,-87,-90,-130,-208,-97,-207,-95,-98,35,-99,-102,-128,35,35,-142,-105,35,-129,-206,-122,35,-75,35,35,-212,-187,35,-143,35,35,35,-108,35,-132,-137,35,-134,-76,-210,35,-174,-176,-172,35,-185,-173,35,-189,-177,35,-191,-175,-211,-188,35,-104,-109,-120,-135,35,-136,35,35,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-110,-121,35,35,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'?':([81,82,85,87,90,94,96,97,98,99,100,102,103,104,105,106,107,132,135,172,178,186,196,198,205,267,268,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-51,-49,-53,-44,-29,188,-36,-5,-55,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,-52,-42,-40,-43,-41,-56,-34,-35,-54,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'REGISTER':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,41,43,46,47,49,51,54,56,57,59,60,69,75,101,113,114,116,117,118,120,121,123,124,127,134,137,141,142,147,148,150,160,162,163,170,171,206,211,213,215,218,219,222,240,241,244,249,255,264,296,297,300,305,327,339,340,342,343,347,348,349,],[14,14,-94,-127,-101,-92,-93,-89,-88,-205,14,-91,-100,-96,-131,14,-87,-90,-130,-208,-97,-207,-95,-98,14,-99,-102,-128,14,-105,-129,-206,-122,14,-75,14,14,-212,-187,14,-132,-137,-134,-76,-210,14,-174,-176,-172,14,-185,-173,14,-189,-177,-191,-175,-211,-188,-104,-120,-135,14,-136,14,-133,-209,-187,-203,-201,-189,-192,-186,-202,-103,-121,14,14,-200,-204,-180,-178,-179,-196,-195,-193,-198,-199,-197,-194,]),'LEFT_ASSIGN':([81,82,99,104,105,106,132,135,172,178,186,196,198,205,267,285,286,287,317,318,321,322,],[-2,-27,-5,-1,-3,-15,233,-1,-17,-19,-18,-12,-11,-16,-4,-9,-10,-7,-28,-20,-8,-6,]),'>':([81,82,94,96,98,99,102,104,105,106,107,132,135,172,178,186,196,198,205,267,272,273,274,275,278,279,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,185,-29,-36,-5,-39,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-42,-40,-43,-41,-34,-35,-37,-38,185,185,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'INC_OP':([50,51,56,59,81,83,84,86,88,89,91,92,93,95,99,104,105,106,108,111,113,115,117,118,120,121,122,123,124,127,131,134,135,137,139,140,141,142,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,198,200,201,202,203,204,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,267,285,286,287,296,297,298,300,302,305,319,320,321,322,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[108,-75,108,-187,-2,108,108,108,-26,-21,-23,-22,-24,108,-5,-1,-3,198,108,-25,-76,108,-174,-176,-172,108,108,-185,-173,108,108,-189,-1,-177,108,108,-191,-175,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-12,-11,108,108,108,108,108,108,-187,-203,108,-201,-189,108,-192,108,108,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,108,108,108,-186,-202,108,108,108,108,-4,-9,-10,-7,-200,-204,108,-180,108,-178,108,108,-8,-6,108,108,108,-179,108,108,108,108,-196,-195,-193,-198,108,108,-199,-197,-194,]),'|':([81,82,85,87,90,94,96,98,99,102,103,104,105,106,107,132,135,172,178,186,196,198,205,267,268,270,271,272,273,274,275,278,279,280,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-51,-49,181,-44,-29,-36,-5,-39,-47,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,-50,-48,-52,-42,-40,-43,-41,-34,-35,181,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'NE_OP':([81,82,94,96,98,99,102,103,104,105,106,107,132,135,172,178,186,196,198,205,267,270,272,273,274,275,278,279,281,282,283,284,285,286,287,291,292,293,317,318,321,322,],[-2,-27,-44,-29,-36,-5,-39,194,-1,-3,-15,-33,-27,-1,-17,-19,-18,-12,-11,-16,-4,194,-42,-40,-43,-41,-34,-35,-37,-38,-46,-45,-9,-10,-7,-30,-32,-31,-28,-20,-8,-6,]),'~':([50,51,56,59,83,84,86,88,89,91,92,93,95,108,111,113,115,117,118,120,121,122,123,124,127,131,134,137,139,140,141,142,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,213,215,217,218,219,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,245,256,263,296,297,298,300,302,305,319,320,324,325,326,327,328,329,330,337,339,340,342,343,344,346,347,348,349,],[111,-75,111,-187,111,111,111,-26,-21,-23,-22,-24,111,111,-25,-76,111,-174,-176,-172,111,111,-185,-173,111,111,-189,-177,111,111,-191,-175,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-187,-203,111,-201,-189,111,-192,111,111,-66,-64,-70,-71,-69,-62,-63,-67,-61,-65,-68,111,111,111,-186,-202,111,111,111,111,-200,-204,111,-180,111,-178,111,111,111,111,111,-179,111,111,111,111,-196,-195,-193,-198,111,111,-199,-197,-194,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,13,20,32,36,49,54,56,60,116,121,127,163,171,255,264,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'expression_statement':([56,121,127,139,217,223,239,298,302,326,328,330,337,344,346,],[117,117,117,117,298,117,117,325,117,117,117,117,117,117,117,]),'type_name':([84,140,179,],[174,174,269,]),'unary_expression':([50,56,83,84,86,95,108,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,217,221,223,224,237,238,239,243,245,256,263,298,302,319,320,324,325,326,328,329,330,337,344,346,],[82,132,172,132,178,82,205,132,132,132,132,82,132,132,82,82,82,132,82,132,82,82,82,82,82,82,82,132,82,82,82,82,82,82,82,132,132,82,82,82,132,132,132,132,132,132,132,132,132,82,82,82,132,132,82,132,132,132,132,132,132,132,132,132,132,]),'conditional_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,179,188,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[110,145,145,145,145,145,145,110,145,145,110,110,110,145,145,145,145,145,145,145,145,145,145,145,145,145,145,110,110,145,145,333,145,145,145,145,145,145,145,145,145,145,]),'struct_or_union_specifier':([0,1,13,20,32,36,42,49,54,56,60,63,64,65,67,84,116,121,127,140,149,163,171,179,255,264,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'exclusive_or_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,179,181,187,188,191,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,271,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'initializer':([115,208,324,],[209,294,335,]),'iteration_statement':([56,121,127,139,223,239,302,326,328,330,337,344,346,],[118,118,118,118,118,118,118,118,118,118,118,118,118,]),'init_declarator_list':([25,58,],[52,52,]),'struct_declaration_list':([42,63,],[64,149,]),'enumerator':([48,70,159,],[71,71,250,]),'abstract_declarator':([78,163,175,264,],[164,253,265,253,]),'pointer':([0,6,18,20,25,38,58,68,78,112,163,175,247,264,],[11,40,11,11,11,62,11,11,168,11,168,266,11,266,]),'and_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,177,179,181,187,188,191,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,268,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'external_declaration':([0,20,],[12,46,]),'type_specifier':([0,1,13,20,32,36,42,49,54,56,60,63,64,65,67,84,116,121,127,140,149,163,171,179,255,264,],[13,13,13,13,13,13,65,13,13,13,13,65,65,65,65,65,13,13,13,65,65,13,13,65,13,13,]),'compound_statement':([36,54,56,60,116,121,127,139,223,239,302,326,328,330,337,344,346,],[57,114,124,147,211,124,124,124,124,124,124,124,124,124,124,124,124,]),'inclusive_or_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,179,187,188,191,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,280,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'logical_or_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,179,188,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'selection_statement':([56,121,127,139,223,239,302,326,328,330,337,344,346,],[142,142,142,142,142,142,142,142,142,142,142,142,142,]),'postfix_expression':([50,56,83,84,86,95,108,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,217,221,223,224,237,238,239,243,245,256,263,298,302,319,320,324,325,326,328,329,330,337,344,346,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'relational_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,187,188,191,194,195,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,283,284,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'statement':([56,121,127,139,223,239,302,326,328,330,337,344,346,],[134,134,219,242,300,305,327,339,340,342,343,347,349,]),'unary_operator':([50,56,83,84,86,95,108,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,217,221,223,224,237,238,239,243,245,256,263,298,302,319,320,324,325,326,328,329,330,337,344,346,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'cast_expression':([50,56,84,95,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,217,221,223,224,237,238,239,243,245,256,263,298,302,319,320,324,325,326,328,329,330,337,344,346,],[96,96,96,186,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,291,292,293,96,96,96,96,96,96,96,96,96,96,96,317,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'compound_list':([56,121,127,],[136,214,220,]),'initializer_list':([208,],[295,]),'struct_declarator_list':([68,],[157,]),'multiplicative_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,278,279,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'translation_unit':([0,],[20,]),'assignment_operator':([132,],[237,]),'struct_or_union':([0,1,13,20,32,36,42,49,54,56,60,63,64,65,67,84,116,121,127,140,149,163,171,179,255,264,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'struct_declaration':([42,63,64,149,],[66,66,151,151,]),'assignment_expression':([56,84,115,121,122,127,139,140,173,179,188,200,201,208,217,221,223,224,237,238,239,243,298,302,320,324,325,326,328,329,330,337,344,346,],[143,143,210,143,143,143,143,143,143,143,143,288,143,210,143,299,143,143,303,143,143,143,143,143,334,210,143,143,143,143,143,143,143,143,]),'parameter_type_list':([49,163,255,264,],[76,252,313,252,]),'parameter_declaration':([49,163,171,255,264,],[77,77,262,77,77,]),'direct_declarator':([0,11,18,20,25,58,68,78,112,163,168,247,],[24,43,24,24,24,24,24,24,24,24,43,24,]),'type_qualifier_list':([6,],[38,]),'argument_expression_list':([200,],[289,]),'direct_abstract_declarator':([78,163,168,175,264,266,],[166,166,259,166,166,259,]),'additive_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,182,183,184,185,187,188,191,192,193,194,195,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,281,282,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'equality_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,187,188,191,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,270,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'primary_expression':([50,56,83,84,86,95,108,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,200,201,202,203,204,208,217,221,223,224,237,238,239,243,245,256,263,298,302,319,320,324,325,326,328,329,330,337,344,346,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'declaration_specifiers':([0,1,13,20,32,36,49,54,56,60,116,121,127,163,171,255,264,],[25,37,44,25,55,58,78,58,58,58,58,58,58,78,78,78,78,]),'declaration':([0,20,36,54,56,60,116,121,127,],[26,26,59,59,59,148,148,213,59,]),'logical_and_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,179,187,188,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,276,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'declarator':([0,18,20,25,58,68,78,112,163,247,],[36,45,36,54,146,155,165,146,45,155,]),'shift_expression':([50,56,84,115,121,122,127,131,139,140,156,161,167,173,177,179,180,181,182,183,184,185,187,188,191,194,195,200,201,208,217,221,223,224,237,238,239,243,245,256,298,302,319,320,324,325,326,328,329,330,337,344,346,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,272,273,274,275,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'identifier_list':([49,],[79,]),'jump_statement':([56,121,127,139,223,239,302,326,328,330,337,344,346,],[137,137,137,137,137,137,137,137,137,137,137,137,137,]),'struct_declarator':([68,247,],[154,309,]),'function_definition':([0,20,],[28,28,]),'parameter_list':([49,163,255,264,],[80,80,80,80,]),'enum_specifier':([0,1,13,20,32,36,42,49,54,56,60,63,64,65,67,84,116,121,127,140,149,163,171,179,255,264,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'type_qualifier':([0,1,6,13,20,32,36,38,42,49,54,56,60,63,64,65,67,84,116,121,127,140,149,163,171,179,255,264,],[32,32,39,32,32,32,32,61,67,32,32,32,32,67,67,67,67,67,32,32,32,67,67,32,32,67,32,32,]),'enumerator_list':([48,70,],[72,158,]),'labeled_statement':([56,121,127,139,223,239,302,326,328,330,337,344,346,],[120,120,120,120,120,120,120,120,120,120,120,120,120,]),'declaration_list':([36,54,56,121,127,],[60,116,121,121,121,]),'specifier_qualifier_list':([42,63,64,65,67,84,140,149,179,],[68,68,68,152,153,175,175,68,175,]),'constant_expression':([50,131,156,161,167,245,256,],[109,225,246,251,257,308,315,]),'init_declarator':([25,58,112,],[53,53,207,]),'statement_list':([56,121,127,],[127,127,127,]),'expression':([56,84,121,122,127,139,140,173,179,188,201,217,223,224,238,239,243,298,302,325,326,328,329,330,337,344,346,],[128,176,128,216,128,128,176,176,176,277,290,128,128,301,304,128,307,128,128,338,128,128,341,128,128,128,128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression_1','cparser.py',7),
  ('primary_expression -> CONSTANT','primary_expression',1,'p_primary_expression_2','cparser.py',12),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression_3','cparser.py',16),
  ('primary_expression -> OPENPARAN expression CLOSEPARAN','primary_expression',3,'p_primary_expression_4','cparser.py',20),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','cparser.py',24),
  ('postfix_expression -> postfix_expression [ expression ]','postfix_expression',4,'p_postfix_expression_2','cparser.py',28),
  ('postfix_expression -> postfix_expression OPENPARAN CLOSEPARAN','postfix_expression',3,'p_postfix_expression_3','cparser.py',32),
  ('postfix_expression -> postfix_expression OPENPARAN argument_expression_list CLOSEPARAN','postfix_expression',4,'p_postfix_expression_4','cparser.py',36),
  ('postfix_expression -> postfix_expression . IDENTIFIER','postfix_expression',3,'p_postfix_expression_5','cparser.py',40),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression_6','cparser.py',44),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','cparser.py',48),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','cparser.py',52),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','cparser.py',56),
  ('argument_expression_list -> argument_expression_list , assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','cparser.py',60),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','cparser.py',64),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','cparser.py',68),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','cparser.py',72),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','cparser.py',76),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','cparser.py',79),
  ('unary_expression -> SIZEOF OPENPARAN type_name CLOSEPARAN','unary_expression',4,'p_unary_expression_6','cparser.py',82),
  ('unary_operator -> &','unary_operator',1,'p_unary_operator_1','cparser.py',86),
  ('unary_operator -> *','unary_operator',1,'p_unary_operator_2','cparser.py',90),
  ('unary_operator -> +','unary_operator',1,'p_unary_operator_3','cparser.py',93),
  ('unary_operator -> -','unary_operator',1,'p_unary_operator_4','cparser.py',96),
  ('unary_operator -> ~','unary_operator',1,'p_unary_operator_5','cparser.py',99),
  ('unary_operator -> !','unary_operator',1,'p_unary_operator_6','cparser.py',102),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','cparser.py',105),
  ('cast_expression -> OPENPARAN type_name CLOSEPARAN cast_expression','cast_expression',4,'p_cast_expression_2','cparser.py',108),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','cparser.py',112),
  ('multiplicative_expression -> multiplicative_expression * cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','cparser.py',116),
  ('multiplicative_expression -> multiplicative_expression / cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','cparser.py',120),
  ('multiplicative_expression -> multiplicative_expression % cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','cparser.py',123),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','cparser.py',126),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression_2','cparser.py',129),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression_3','cparser.py',132),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','cparser.py',135),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','cparser.py',138),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','cparser.py',141),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','cparser.py',144),
  ('relational_expression -> relational_expression < shift_expression','relational_expression',3,'p_relational_expression_2','cparser.py',147),
  ('relational_expression -> relational_expression > shift_expression','relational_expression',3,'p_relational_expression_3','cparser.py',150),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','cparser.py',153),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','cparser.py',156),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','cparser.py',159),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','cparser.py',162),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','cparser.py',165),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','cparser.py',168),
  ('and_expression -> and_expression & equality_expression','and_expression',3,'p_and_expression_2','cparser.py',171),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','cparser.py',174),
  ('exclusive_or_expression -> exclusive_or_expression ^ and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','cparser.py',177),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','cparser.py',180),
  ('inclusive_or_expression -> inclusive_or_expression | exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','cparser.py',183),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','cparser.py',186),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','cparser.py',189),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','cparser.py',192),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','cparser.py',195),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','cparser.py',198),
  ('conditional_expression -> logical_or_expression ? expression : conditional_expression','conditional_expression',5,'p_conditional_expression_2','cparser.py',201),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','cparser.py',204),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','cparser.py',208),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator_1','cparser.py',211),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','cparser.py',214),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','cparser.py',217),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','cparser.py',220),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','cparser.py',223),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','cparser.py',226),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','cparser.py',229),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','cparser.py',232),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','cparser.py',235),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','cparser.py',238),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','cparser.py',241),
  ('expression -> assignment_expression','expression',1,'p_expression_1','cparser.py',244),
  ('expression -> expression , assignment_expression','expression',3,'p_expression_2','cparser.py',247),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','cparser.py',250),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','cparser.py',254),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','cparser.py',258),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','cparser.py',269),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','cparser.py',272),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','cparser.py',275),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','cparser.py',279),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','cparser.py',282),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','cparser.py',285),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','cparser.py',288),
  ('init_declarator_list -> init_declarator_list , init_declarator','init_declarator_list',3,'p_init_declarator_list_2','cparser.py',291),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','cparser.py',295),
  ('init_declarator -> declarator = initializer','init_declarator',3,'p_init_declarator_2','cparser.py',299),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_1','cparser.py',304),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_2','cparser.py',307),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','cparser.py',310),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_4','cparser.py',313),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_5','cparser.py',316),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','cparser.py',319),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','cparser.py',323),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','cparser.py',326),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','cparser.py',329),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','cparser.py',332),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','cparser.py',335),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','cparser.py',338),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','cparser.py',341),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','cparser.py',344),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','cparser.py',347),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','cparser.py',350),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER OPENBRACK struct_declaration_list CLOSEBRACK','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','cparser.py',353),
  ('struct_or_union_specifier -> struct_or_union OPENBRACK struct_declaration_list CLOSEBRACK','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','cparser.py',357),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','cparser.py',361),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','cparser.py',365),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','cparser.py',369),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','cparser.py',373),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','cparser.py',377),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','cparser.py',381),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','cparser.py',385),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_2','cparser.py',389),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_3','cparser.py',392),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_4','cparser.py',395),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','cparser.py',398),
  ('struct_declarator_list -> struct_declarator_list , struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','cparser.py',401),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','cparser.py',404),
  ('struct_declarator -> : constant_expression','struct_declarator',2,'p_struct_declarator_2','cparser.py',407),
  ('struct_declarator -> declarator : constant_expression','struct_declarator',3,'p_struct_declarator_3','cparser.py',410),
  ('enum_specifier -> ENUM OPENBRACK enumerator_list CLOSEBRACK','enum_specifier',4,'p_enum_specifier_1','cparser.py',413),
  ('enum_specifier -> ENUM IDENTIFIER OPENBRACK enumerator_list CLOSEBRACK','enum_specifier',5,'p_enum_specifier_2','cparser.py',416),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier_3','cparser.py',419),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','cparser.py',422),
  ('enumerator_list -> enumerator_list , enumerator','enumerator_list',3,'p_enumerator_list_2','cparser.py',425),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator_1','cparser.py',428),
  ('enumerator -> IDENTIFIER = constant_expression','enumerator',3,'p_enumerator_2','cparser.py',431),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','cparser.py',434),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','cparser.py',437),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_1','cparser.py',440),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_2','cparser.py',443),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator_1','cparser.py',449),
  ('direct_declarator -> OPENPARAN declarator CLOSEPARAN','direct_declarator',3,'p_direct_declarator_2','cparser.py',455),
  ('direct_declarator -> direct_declarator [ constant_expression ]','direct_declarator',4,'p_direct_declarator_3','cparser.py',458),
  ('direct_declarator -> direct_declarator [ ]','direct_declarator',3,'p_direct_declarator_4','cparser.py',461),
  ('direct_declarator -> direct_declarator OPENPARAN parameter_type_list CLOSEPARAN','direct_declarator',4,'p_direct_declarator_5','cparser.py',464),
  ('direct_declarator -> direct_declarator OPENPARAN identifier_list CLOSEPARAN','direct_declarator',4,'p_direct_declarator_6','cparser.py',474),
  ('direct_declarator -> direct_declarator OPENPARAN CLOSEPARAN','direct_declarator',3,'p_direct_declarator_7','cparser.py',477),
  ('pointer -> *','pointer',1,'p_pointer_1','cparser.py',482),
  ('pointer -> * type_qualifier_list','pointer',2,'p_pointer_2','cparser.py',486),
  ('pointer -> * pointer','pointer',2,'p_pointer_3','cparser.py',490),
  ('pointer -> * type_qualifier_list pointer','pointer',3,'p_pointer_4','cparser.py',494),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','cparser.py',498),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','cparser.py',501),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','cparser.py',504),
  ('parameter_type_list -> parameter_list , ELLIPSIS','parameter_type_list',3,'p_parameter_type_list_2','cparser.py',508),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','cparser.py',512),
  ('parameter_list -> parameter_list , parameter_declaration','parameter_list',3,'p_parameter_list_2','cparser.py',518),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','cparser.py',525),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_2','cparser.py',533),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_3','cparser.py',536),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list_1','cparser.py',539),
  ('identifier_list -> identifier_list , IDENTIFIER','identifier_list',3,'p_identifier_list_2','cparser.py',545),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','cparser.py',551),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','cparser.py',554),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','cparser.py',557),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','cparser.py',560),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','cparser.py',563),
  ('direct_abstract_declarator -> OPENPARAN abstract_declarator CLOSEPARAN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','cparser.py',566),
  ('direct_abstract_declarator -> [ ]','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','cparser.py',569),
  ('direct_abstract_declarator -> [ constant_expression ]','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','cparser.py',572),
  ('direct_abstract_declarator -> direct_abstract_declarator [ ]','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','cparser.py',575),
  ('direct_abstract_declarator -> direct_abstract_declarator [ constant_expression ]','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','cparser.py',578),
  ('direct_abstract_declarator -> OPENPARAN CLOSEPARAN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','cparser.py',581),
  ('direct_abstract_declarator -> OPENPARAN parameter_type_list CLOSEPARAN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','cparser.py',584),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPARAN CLOSEPARAN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','cparser.py',587),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPARAN parameter_type_list CLOSEPARAN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','cparser.py',590),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','cparser.py',593),
  ('initializer -> OPENBRACK initializer_list CLOSEBRACK','initializer',3,'p_initializer_2','cparser.py',596),
  ('initializer -> OPENBRACK initializer_list , CLOSEBRACK','initializer',4,'p_initializer_3','cparser.py',599),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','cparser.py',602),
  ('initializer_list -> initializer_list , initializer','initializer_list',3,'p_initializer_list_2','cparser.py',605),
  ('statement -> labeled_statement','statement',1,'p_statement_1','cparser.py',608),
  ('statement -> compound_statement','statement',1,'p_statement_2','cparser.py',611),
  ('statement -> expression_statement','statement',1,'p_statement_3','cparser.py',615),
  ('statement -> selection_statement','statement',1,'p_statement_4','cparser.py',618),
  ('statement -> iteration_statement','statement',1,'p_statement_5','cparser.py',621),
  ('statement -> jump_statement','statement',1,'p_statement_6','cparser.py',624),
  ('labeled_statement -> IDENTIFIER : statement','labeled_statement',3,'p_labeled_statement_1','cparser.py',627),
  ('labeled_statement -> CASE constant_expression : statement','labeled_statement',4,'p_labeled_statement_2','cparser.py',630),
  ('labeled_statement -> DEFAULT : statement','labeled_statement',3,'p_labeled_statement_3','cparser.py',633),
  ('compound_list -> statement_list','compound_list',1,'p_compound_list_1','cparser.py',637),
  ('compound_list -> declaration_list','compound_list',1,'p_compound_list_2','cparser.py',640),
  ('compound_list -> declaration_list compound_list','compound_list',2,'p_compound_list_3','cparser.py',643),
  ('compound_list -> statement_list compound_list','compound_list',2,'p_compound_list_4','cparser.py',646),
  ('compound_statement -> OPENBRACK CLOSEBRACK','compound_statement',2,'p_compound_statement_1','cparser.py',650),
  ('compound_statement -> OPENBRACK compound_list CLOSEBRACK','compound_statement',3,'p_compound_statement_2','cparser.py',655),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','cparser.py',662),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_2','cparser.py',665),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','cparser.py',668),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','cparser.py',671),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','cparser.py',674),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','cparser.py',677),
  ('selection_statement -> IF OPENPARAN expression CLOSEPARAN statement','selection_statement',5,'p_selection_statement_1','cparser.py',681),
  ('selection_statement -> IF OPENPARAN expression CLOSEPARAN statement ELSE statement','selection_statement',7,'p_selection_statement_2','cparser.py',684),
  ('selection_statement -> SWITCH OPENPARAN expression CLOSEPARAN statement','selection_statement',5,'p_selection_statement_3','cparser.py',687),
  ('iteration_statement -> WHILE OPENPARAN expression CLOSEPARAN statement','iteration_statement',5,'p_iteration_statement_1','cparser.py',690),
  ('iteration_statement -> DO statement WHILE OPENPARAN expression CLOSEPARAN SEMI','iteration_statement',7,'p_iteration_statement_2','cparser.py',693),
  ('iteration_statement -> FOR OPENPARAN expression_statement expression_statement CLOSEPARAN statement','iteration_statement',6,'p_iteration_statement_3','cparser.py',696),
  ('iteration_statement -> FOR OPENPARAN expression_statement expression_statement expression CLOSEPARAN statement','iteration_statement',7,'p_iteration_statement_4','cparser.py',699),
  ('jump_statement -> GOTO IDENTIFIER SEMI','jump_statement',3,'p_jump_statement_1','cparser.py',702),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','cparser.py',705),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','cparser.py',708),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','cparser.py',711),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','cparser.py',714),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','cparser.py',717),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','cparser.py',720),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','cparser.py',723),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','cparser.py',726),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_1','cparser.py',729),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_2','cparser.py',734),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_3','cparser.py',744),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_4','cparser.py',749),
]
